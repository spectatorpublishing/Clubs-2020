{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/searchTag/index.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useFocused } from '../customHooks/index';\n\nconst SearchTag = ({\n  text,\n  theme,\n  data,\n  setData\n}) => {\n  const tagVariants = {\n    active: {\n      color: theme.colors.white,\n      backgroundColor: theme.colors.red\n    },\n    inactive: {\n      color: theme.colors.red,\n      backgroundColor: 'rgba(236, 108, 82, 0.08)'\n    }\n  };\n  const [clicked, setClicked] = useState(false);\n  const [test, setTest] = useState([]);\n  const searchTag = useRef(null);\n  const searchTagFocused = useFocused(searchTag);\n  useEffect(() => {\n    console.log(clicked);\n  }, [clicked]);\n\n  const onKeypress = e => {\n    if (e.keyCode === 13) {\n      searchTag.current.click();\n    }\n  };\n\n  useEffect(() => {\n    if (searchTagFocused) {\n      document.addEventListener('keypress', onKeypress);\n    }\n\n    return () => {\n      document.removeEventListener('keypress', onKeypress);\n    };\n  }, [searchTagFocused]);\n\n  function handleClick() {\n    setClicked(!clicked);\n    const temp = [...data]; //console.log(temp)\n\n    setData(temp); //let tempData = [...data];\n    //if (clicked) {\n    //  const index = tempData.indexOf(text);\n    //  if (index >= 1) tempData.splice(index, 1);\n    //} else tempData.tags.push(text);\n    //tempData.push(text);\n    //console.log(clicked);\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, {\n    ref: searchTag,\n    clicked: clicked,\n    onClick: handleClick,\n    variants: tagVariants,\n    whileTap: {\n      scale: 0.95\n    },\n    initial: \"inactive\",\n    animate: clicked ? 'active' : 'inactive',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, text);\n};\n\nconst Tag = styled(motion.button)`\n  display: inline-block;\n  padding: 0.4rem 1rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  font-size: 1rem;\n  border-radius: 1rem;\n  border: 0.125rem ${props => props.theme.colors.red} solid;\n  outline-color: ${props => props.theme.colors.blue};\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: pointer;\n  @media only screen and (max-width: 600px) {\n    font-size: 0.85rem;\n  }\n`;\nexport default withTheme(SearchTag);","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/searchTag/index.js"],"names":["React","useState","useRef","useEffect","styled","withTheme","motion","useFocused","SearchTag","text","theme","data","setData","tagVariants","active","color","colors","white","backgroundColor","red","inactive","clicked","setClicked","test","setTest","searchTag","searchTagFocused","console","log","onKeypress","e","keyCode","current","click","document","addEventListener","removeEventListener","handleClick","temp","scale","Tag","button","props","blue"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useFocused } from '../customHooks/index';\nconst SearchTag = ({ text, theme, data, setData }) => {\n  const tagVariants = {\n    active: { color: theme.colors.white, backgroundColor: theme.colors.red },\n    inactive: {\n      color: theme.colors.red,\n      backgroundColor: 'rgba(236, 108, 82, 0.08)',\n    },\n  };\n  const [clicked, setClicked] = useState(false);\n  const [test, setTest] = useState([]);\n  const searchTag = useRef(null);\n  const searchTagFocused = useFocused(searchTag);\n  useEffect(() => {\n    console.log(clicked);\n  }, [clicked]);\n  const onKeypress = (e) => {\n    if (e.keyCode === 13) {\n      searchTag.current.click();\n    }\n  };\n  useEffect(() => {\n    if (searchTagFocused) {\n      document.addEventListener('keypress', onKeypress);\n    }\n    return () => {\n      document.removeEventListener('keypress', onKeypress);\n    };\n  }, [searchTagFocused]);\n  function handleClick() {\n    setClicked(!clicked);\n    const temp = [...data]\n    //console.log(temp)\n    setData(temp)\n\n    //let tempData = [...data];\n    //if (clicked) {\n    //  const index = tempData.indexOf(text);\n    //  if (index >= 1) tempData.splice(index, 1);\n    //} else tempData.tags.push(text);\n    //tempData.push(text);\n    //console.log(clicked);\n  }\n  return (\n    <Tag\n      ref={searchTag}\n      clicked={clicked}\n      onClick={handleClick}\n      variants={tagVariants}\n      whileTap={{ scale: 0.95 }}\n      initial='inactive'\n      animate={clicked ? 'active' : 'inactive'}\n    >\n      {text}\n    </Tag>\n  );\n};\n\nconst Tag = styled(motion.button)`\n  display: inline-block;\n  padding: 0.4rem 1rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  font-size: 1rem;\n  border-radius: 1rem;\n  border: 0.125rem ${(props) => props.theme.colors.red} solid;\n  outline-color: ${(props) => props.theme.colors.blue};\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: pointer;\n  @media only screen and (max-width: 600px) {\n    font-size: 0.85rem;\n  }\n`;\n\nexport default withTheme(SearchTag);\n"]},"metadata":{},"sourceType":"module"}