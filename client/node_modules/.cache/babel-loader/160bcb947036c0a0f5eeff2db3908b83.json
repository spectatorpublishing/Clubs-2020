{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/searchTag/index.js\";\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useFocused } from '../customHooks/index';\n\nconst SearchTag = ({\n  text,\n  theme,\n  data,\n  setData\n}) => {\n  const tagVariants = {\n    active: {\n      color: theme.colors.white,\n      backgroundColor: theme.colors.red\n    },\n    inactive: {\n      color: theme.colors.red,\n      backgroundColor: 'rgba(236, 108, 82, 0.08)'\n    }\n  };\n  const [clicked, setClicked] = useState(false);\n  const searchTag = useRef(null);\n  const searchTagFocused = useFocused(searchTag);\n\n  const onKeypress = e => {\n    if (e.keyCode === 13) {\n      searchTag.current.click();\n    }\n  };\n\n  useEffect(() => {\n    if (searchTagFocused) {\n      document.addEventListener('keypress', onKeypress);\n    }\n\n    return () => {\n      document.removeEventListener('keypress', onKeypress);\n    };\n  }, [searchTagFocused]);\n\n  const handleClick = () => {\n    if (data && setData) {\n      let tempData = { ...data\n      };\n\n      if (clicked) {\n        const index = tempData.indexOf(text);\n        if (index >= 1) tempData.splice(index, 1);\n      } else tempData.tags.push(text);\n\n      setData(tempData);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Tag, {\n    ref: searchTag,\n    clicked: clicked,\n    onClick: () => {\n      setClicked(!clicked);\n    },\n    variants: tagVariants,\n    whileTap: {\n      scale: 0.95\n    },\n    initial: \"inactive\",\n    animate: clicked ? 'active' : 'inactive',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, text, data[0]);\n};\n\nconst Tag = styled(motion.button)`\n  display: inline-block;\n  padding: 0.4rem 1rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  font-size: 1rem;\n  border-radius: 1rem;\n  border: 0.125rem ${props => props.theme.colors.red} solid;\n  outline-color: ${props => props.theme.colors.blue};\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: pointer;\n  @media only screen and (max-width: 600px) {\n    font-size: 0.85rem;\n  }\n`;\nexport default withTheme(SearchTag);","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/searchTag/index.js"],"names":["React","useState","useRef","useEffect","useContext","styled","withTheme","motion","useFocused","SearchTag","text","theme","data","setData","tagVariants","active","color","colors","white","backgroundColor","red","inactive","clicked","setClicked","searchTag","searchTagFocused","onKeypress","e","keyCode","current","click","document","addEventListener","removeEventListener","handleClick","tempData","index","indexOf","splice","tags","push","scale","Tag","button","props","blue"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useFocused } from '../customHooks/index';\nconst SearchTag = ({ text, theme, data, setData }) => {\n  const tagVariants = {\n    active: { color: theme.colors.white, backgroundColor: theme.colors.red },\n    inactive: {\n      color: theme.colors.red,\n      backgroundColor: 'rgba(236, 108, 82, 0.08)',\n    },\n  };\n  const [clicked, setClicked] = useState(false);\n  const searchTag = useRef(null);\n  const searchTagFocused = useFocused(searchTag);\n\n  const onKeypress = (e) => {\n    if (e.keyCode === 13) {\n      searchTag.current.click();\n    }\n  };\n  useEffect(() => {\n    if (searchTagFocused) {\n      document.addEventListener('keypress', onKeypress);\n    }\n    return () => {\n      document.removeEventListener('keypress', onKeypress);\n    };\n  }, [searchTagFocused]);\n  const handleClick = () => {\n    if (data && setData) {\n      let tempData = { ...data };\n      if (clicked) {\n        const index = tempData.indexOf(text);\n        if (index >= 1) tempData.splice(index, 1);\n      } else tempData.tags.push(text);\n      setData(tempData);\n    }\n  };\n  return (\n    <Tag\n      ref={searchTag}\n      clicked={clicked}\n      onClick={() => {\n        \n        setClicked(!clicked);\n      }}\n      variants={tagVariants}\n      whileTap={{ scale: 0.95 }}\n      initial='inactive'\n      animate={clicked ? 'active' : 'inactive'}\n    >\n      {text}\n      {data[0]}\n    </Tag>\n  );\n};\n\nconst Tag = styled(motion.button)`\n  display: inline-block;\n  padding: 0.4rem 1rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  font-size: 1rem;\n  border-radius: 1rem;\n  border: 0.125rem ${(props) => props.theme.colors.red} solid;\n  outline-color: ${(props) => props.theme.colors.blue};\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: pointer;\n  @media only screen and (max-width: 600px) {\n    font-size: 0.85rem;\n  }\n`;\n\nexport default withTheme(SearchTag);\n"]},"metadata":{},"sourceType":"module"}