{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/filledButton/index.js\";\nimport React, { useRef } from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { withRouter } from 'react-router-dom';\nimport { useFocused } from '../customHooks';\n\nconst FilledButton = ({\n  theme,\n  text,\n  stateFunc,\n  stateVal,\n  onClick,\n  path,\n  history\n}) => {\n  const button = useRef(null);\n  const buttonFocused = useFocused(button);\n\n  const handleClick = () => {\n    // For updating path\n    if (path) {\n      setTimeout(function () {\n        history.push('/profile-creation/2');\n      }, 200);\n    } // For state change\n    else if (!onClick) {\n        if (stateFunc) stateFunc(!stateVal);else console.error(`state func not defined for button with text \"${text}\"`);\n      } // For custom function\n      else {\n          onClick();\n        }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledButton, {\n    ref: button,\n    whileHover: {\n      backgroundColor: theme.colors.darkRed\n    },\n    whileTap: {\n      backgroundColor: '#C45B45',\n      scale: 0.95\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, text ? text : 'no text passed in');\n};\n\nconst StyledButton = styled(motion.button)`\n  min-width: 6.4375rem;\n  max-width: 13rem;\n  min-height: 2.225rem;\n  width: auto;\n  background: ${props => props.theme.colors.red};\n  color: ${props => props.theme.colors.fullWhite};\n  border-radius: 0.4375rem;\n  border: none;\n  padding: 0.3rem;\n  font-size: 1rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\nexport default withRouter(withTheme(FilledButton));","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/filledButton/index.js"],"names":["React","useRef","styled","withTheme","motion","withRouter","useFocused","FilledButton","theme","text","stateFunc","stateVal","onClick","path","history","button","buttonFocused","handleClick","setTimeout","push","console","error","backgroundColor","colors","darkRed","scale","StyledButton","props","red","fullWhite"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,gBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,KADoB;AAEpBC,EAAAA,IAFoB;AAGpBC,EAAAA,SAHoB;AAIpBC,EAAAA,QAJoB;AAKpBC,EAAAA,OALoB;AAMpBC,EAAAA,IANoB;AAOpBC,EAAAA;AAPoB,CAAD,KAQf;AACJ,QAAMC,MAAM,GAAGd,MAAM,CAAC,IAAD,CAArB;AACA,QAAMe,aAAa,GAAGV,UAAU,CAACS,MAAD,CAAhC;;AAEA,QAAME,WAAW,GAAG,MAAM;AACxB;AACA,QAAIJ,IAAJ,EAAU;AACRK,MAAAA,UAAU,CAAC,YAAW;AACpBJ,QAAAA,OAAO,CAACK,IAAR,CAAa,qBAAb;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KAJD,CAKA;AALA,SAMK,IAAI,CAACP,OAAL,EAAc;AACjB,YAAIF,SAAJ,EAAeA,SAAS,CAAC,CAACC,QAAF,CAAT,CAAf,KAEES,OAAO,CAACC,KAAR,CAAe,gDAA+CZ,IAAK,GAAnE;AACH,OAJI,CAKL;AALK,WAMA;AACHG,UAAAA,OAAO;AACR;AACF,GAjBD;;AAkBA,sBACE,oBAAC,YAAD;AACE,IAAA,GAAG,EAAEG,MADP;AAEE,IAAA,UAAU,EAAE;AAAEO,MAAAA,eAAe,EAAEd,KAAK,CAACe,MAAN,CAAaC;AAAhC,KAFd;AAGE,IAAA,QAAQ,EAAE;AAAEF,MAAAA,eAAe,EAAE,SAAnB;AAA8BG,MAAAA,KAAK,EAAE;AAArC,KAHZ;AAIE,IAAA,OAAO,EAAER,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGR,IAAI,GAAGA,IAAH,GAAU,mBANjB,CADF;AAUD,CAxCD;;AA0CA,MAAMiB,YAAY,GAAGxB,MAAM,CAACE,MAAM,CAACW,MAAR,CAAgB;AAC3C;AACA;AACA;AACA;AACA,gBAAgBY,KAAK,IAAIA,KAAK,CAACnB,KAAN,CAAYe,MAAZ,CAAmBK,GAAI;AAChD,WAAWD,KAAK,IAAIA,KAAK,CAACnB,KAAN,CAAYe,MAAZ,CAAmBM,SAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAiBA,eAAexB,UAAU,CAACF,SAAS,CAACI,YAAD,CAAV,CAAzB","sourcesContent":["import React, {useRef} from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { withRouter } from 'react-router-dom';\nimport { useFocused } from '../customHooks';\n\nconst FilledButton = ({\n  theme,\n  text,\n  stateFunc,\n  stateVal,\n  onClick,\n  path,\n  history\n}) => {\n  const button = useRef(null);\n  const buttonFocused = useFocused(button);\n\n  const handleClick = () => {\n    // For updating path\n    if (path) {\n      setTimeout(function() {\n        history.push('/profile-creation/2');\n      }, 200);\n    }\n    // For state change\n    else if (!onClick) {\n      if (stateFunc) stateFunc(!stateVal);\n      else\n        console.error(`state func not defined for button with text \"${text}\"`);\n    }\n    // For custom function\n    else {\n      onClick();\n    }\n  };\n  return (\n    <StyledButton\n      ref={button}\n      whileHover={{ backgroundColor: theme.colors.darkRed }}\n      whileTap={{ backgroundColor: '#C45B45', scale: 0.95 }}\n      onClick={handleClick}\n    >\n      {text ? text : 'no text passed in'}\n    </StyledButton>\n  );\n};\n\nconst StyledButton = styled(motion.button)`\n  min-width: 6.4375rem;\n  max-width: 13rem;\n  min-height: 2.225rem;\n  width: auto;\n  background: ${props => props.theme.colors.red};\n  color: ${props => props.theme.colors.fullWhite};\n  border-radius: 0.4375rem;\n  border: none;\n  padding: 0.3rem;\n  font-size: 1rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\nexport default withRouter(withTheme(FilledButton));\n"]},"metadata":{},"sourceType":"module"}