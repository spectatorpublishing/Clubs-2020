{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/test/firebase/signin.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport * as firebase from '../../UserAuthUtilities/firebase';\nconst Background = styled.div`\n  background-color: ${props => props.theme.colors.lightGray};\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nvar google = new firebase.auth.GoogleAuthProvider();\nexport default function Signin(props) {\n  const [message, setMessage] = useState();\n\n  function handleSignin(e) {\n    firebase.auth().signInWithPopup(google).then(function (result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken; // The signed-in user info.\n\n      var user = result.user;\n      var username = user.displayName;\n      setMessage(`Welcome to Clubs@CU, ${username}!`);\n      console.log(token, user);\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential;\n      setMessage(errorMessage);\n      console.log(errorCode, errorMessage, email, credential);\n    });\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSignin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Sign in with Google\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, message));\n}","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/test/firebase/signin.jsx"],"names":["React","useState","styled","firebase","Background","div","props","theme","colors","lightGray","google","auth","GoogleAuthProvider","Signin","message","setMessage","handleSignin","e","signInWithPopup","then","result","token","credential","accessToken","user","username","displayName","console","log","catch","error","errorCode","code","errorMessage","email","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,kCAA1B;AAEA,MAAMC,UAAU,GAAGF,MAAM,CAACG,GAAI;AAC9B,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,SAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,IAAIC,MAAM,GAAG,IAAIP,QAAQ,CAACQ,IAAT,CAAcC,kBAAlB,EAAb;AAEA,eAAe,SAASC,MAAT,CAAgBP,KAAhB,EAAuB;AAClC,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,EAAtC;;AAEA,WAASe,YAAT,CAAsBC,CAAtB,EAAyB;AACrBd,IAAAA,QAAQ,CAACQ,IAAT,GAAgBO,eAAhB,CAAgCR,MAAhC,EAAwCS,IAAxC,CAA6C,UAASC,MAAT,EAAiB;AAC1D;AACA,UAAIC,KAAK,GAAGD,MAAM,CAACE,UAAP,CAAkBC,WAA9B,CAF0D,CAG1D;;AACA,UAAIC,IAAI,GAAGJ,MAAM,CAACI,IAAlB;AACA,UAAIC,QAAQ,GAAGD,IAAI,CAACE,WAApB;AAEAX,MAAAA,UAAU,CAAE,wBAAuBU,QAAS,GAAlC,CAAV;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmBG,IAAnB;AACH,KATD,EASGK,KATH,CASS,UAASC,KAAT,EAAgB;AACrB;AACA,UAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,UAAIC,YAAY,GAAGH,KAAK,CAAChB,OAAzB,CAHqB,CAIrB;;AACA,UAAIoB,KAAK,GAAGJ,KAAK,CAACI,KAAlB,CALqB,CAMrB;;AACA,UAAIZ,UAAU,GAAGQ,KAAK,CAACR,UAAvB;AAEAP,MAAAA,UAAU,CAACkB,YAAD,CAAV;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ,EAAuBE,YAAvB,EAAqCC,KAArC,EAA4CZ,UAA5C;AACH,KApBD;AAqBAL,IAAAA,CAAC,CAACkB,cAAF;AACH;;AAED,sBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEnB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,OAAN,CAFJ,CADJ;AAMH","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport * as firebase from '../../UserAuthUtilities/firebase';\n\nconst Background = styled.div`\n  background-color: ${props => props.theme.colors.lightGray};\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nvar google = new firebase.auth.GoogleAuthProvider();\n\nexport default function Signin(props) {\n    const [message, setMessage] = useState();\n\n    function handleSignin(e) {\n        firebase.auth().signInWithPopup(google).then(function(result) {\n            // This gives you a Google Access Token. You can use it to access the Google API.\n            var token = result.credential.accessToken;\n            // The signed-in user info.\n            var user = result.user;\n            var username = user.displayName;\n\n            setMessage(`Welcome to Clubs@CU, ${username}!`);\n            console.log(token, user);\n        }).catch(function(error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            // The email of the user's account used.\n            var email = error.email;\n            // The firebase.auth.AuthCredential type that was used.\n            var credential = error.credential;\n\n            setMessage(errorMessage);\n            console.log(errorCode, errorMessage, email, credential);\n        });\n        e.preventDefault();\n    }\n\n    return (\n        <Background>\n            <button onClick={handleSignin}>Sign in with Google</button>\n            <div>{message}</div>\n        </Background>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}