{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/viewportProvider/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { ViewportContext } from '../contexts/index';\n/* \nWe use a context so that we do not need a resize handler for each\ncomponent that changes its components on width or height resize\n*/\n\nconst ViewportProvider = ({\n  children\n}) => {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n\n  const handleWindowResize = () => {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize);\n    return () => window.removeEventListener('resize', handleWindowResize);\n  }, []);\n  return /*#__PURE__*/React.createElement(ViewportContext.Provider, {\n    value: {\n      width,\n      height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default ViewportProvider;","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/viewportProvider/index.js"],"names":["React","useState","useEffect","ViewportContext","ViewportProvider","children","width","setWidth","window","innerWidth","height","setHeight","innerHeight","handleWindowResize","addEventListener","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA;AACA;AACA;AACA;;AACA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACO,MAAM,CAACC,UAAR,CAAlC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAACO,MAAM,CAACI,WAAR,CAApC;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BN,IAAAA,QAAQ,CAACC,MAAM,CAACC,UAAR,CAAR;AACAE,IAAAA,SAAS,CAACH,MAAM,CAACI,WAAR,CAAT;AACD,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCD,kBAAlC;AACA,WAAO,MAAML,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCF,kBAArC,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEP,MAAAA,KAAF;AAASI,MAAAA;AAAT,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QADH,CADF;AAKD,CAnBD;;AAoBA,eAAeD,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ViewportContext } from '../contexts/index';\n\n/* \nWe use a context so that we do not need a resize handler for each\ncomponent that changes its components on width or height resize\n*/\nconst ViewportProvider = ({children}) => {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n\n  const handleWindowResize = () => {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize);\n    return () => window.removeEventListener('resize', handleWindowResize);\n  }, []);\n\n  return (\n    <ViewportContext.Provider value={{ width, height }}>\n      {children}\n    </ViewportContext.Provider>\n  );\n};\nexport default ViewportProvider;\n"]},"metadata":{},"sourceType":"module"}