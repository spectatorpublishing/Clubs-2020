{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/textInput/helper.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport RedAsterisk from '../redAsterisk/index';\nexport const getErrorMessage = (showErrorMessage, excessCharacters) => {\n  return /*#__PURE__*/React.createElement(ErrorMessage, {\n    initial: {\n      opacity: 0,\n      height: 0\n    },\n    animate: showErrorMessage ? {\n      opacity: 1,\n      height: 'auto'\n    } : {\n      opacity: 0,\n      height: 0,\n      transition: {\n        height: {\n          delay: 0.5\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, \"Your message is \", excessCharacters, \" characters too long\");\n};\nexport const getLabel = (compulsory, labelHeader, labelDesc, textId, labelWidth) => {\n  return /*#__PURE__*/React.createElement(TextLabel, {\n    labelWidth: labelWidth,\n    htmlFor: textId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, compulsory ? /*#__PURE__*/React.createElement(RedAsterisk, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"*\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(LabelHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, labelHeader), /*#__PURE__*/React.createElement(LabelDesc, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, labelDesc));\n};\nexport const limitSize = (e, characterMax, setShowErrorMessage, setExcessCharacters) => {\n  if (characterMax !== null && e.target.value.length > characterMax) {\n    setShowErrorMessage(true);\n    setExcessCharacters(e.target.value.length - characterMax);\n  } else if (characterMax !== null && e.target.value.length <= characterMax) {\n    setShowErrorMessage(false);\n  }\n};\nconst ErrorMessage = styled(motion.div)`\n  color: ${props => props.theme.colors.red};\n  margin-top: 0.2rem;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  font-family: 'Manrope', 'Roboto', 'Helvetica', 'Arial';\n`;\nconst TextLabel = styled.label`\n  margin-right: 0.5rem;\n  max-width: ${props => props.labelWidth ? props.labelWidth : '15rem'};\n  display: inline-block;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  font-size: 1.125rem;\n  font-family: 'Manrope', 'Roboto', 'Helvetica', 'Arial';\n  height: fit-content;\n  padding: 0.3rem 0;\n  @media only screen and (max-width: 768px) {\n    padding: 0 0.35rem 0.3rem;\n    max-width: 70%;\n  }\n`;\nconst LabelHeader = styled.div`\n  font-size: 1.125rem;\n`;\nconst LabelDesc = styled.div`\n  font-size: 0.875rem;\n`;","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/textInput/helper.js"],"names":["React","styled","motion","RedAsterisk","getErrorMessage","showErrorMessage","excessCharacters","opacity","height","transition","delay","getLabel","compulsory","labelHeader","labelDesc","textId","labelWidth","limitSize","e","characterMax","setShowErrorMessage","setExcessCharacters","target","value","length","ErrorMessage","div","props","theme","colors","red","TextLabel","label","LabelHeader","LabelDesc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,gBAAD,EAAmBC,gBAAnB,KAAwC;AACrE,sBACE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KADX;AAEE,IAAA,OAAO,EACLH,gBAAgB,GACZ;AAAEE,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KADY,GAEZ;AAAED,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,MAAM,EAAE,CAAtB;AAAyBC,MAAAA,UAAU,EAAE;AAAED,QAAAA,MAAM,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT;AAAV;AAArC,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAQmBJ,gBARnB,yBADF;AAYD,CAbM;AAeP,OAAO,MAAMK,QAAQ,GAAG,CACtBC,UADsB,EAEtBC,WAFsB,EAGtBC,SAHsB,EAItBC,MAJsB,EAKtBC,UALsB,KAMnB;AACH,sBACE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEA,UAAvB;AAAmC,IAAA,OAAO,EAAED,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,UAAU,gBAAG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH,gBAAkC,yCAD/C,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcC,WAAd,CAFF,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYC,SAAZ,CAHF,CADF;AAOD,CAdM;AAgBP,OAAO,MAAMG,SAAS,GAAG,CACvBC,CADuB,EAEvBC,YAFuB,EAGvBC,mBAHuB,EAIvBC,mBAJuB,KAKpB;AACH,MAAIF,YAAY,KAAK,IAAjB,IAAyBD,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwBL,YAArD,EAAmE;AACjEC,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAC,IAAAA,mBAAmB,CAACH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwBL,YAAzB,CAAnB;AACD,GAHD,MAGO,IAAIA,YAAY,KAAK,IAAjB,IAAyBD,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeC,MAAf,IAAyBL,YAAtD,EAAoE;AACzEC,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;AACF,CAZM;AAcP,MAAMK,YAAY,GAAGxB,MAAM,CAACC,MAAM,CAACwB,GAAR,CAAa;AACxC,WAAYC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,GAAI;AAC7C;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMC,SAAS,GAAG9B,MAAM,CAAC+B,KAAM;AAC/B;AACA,eAAgBL,KAAD,IAAYA,KAAK,CAACX,UAAN,GAAmBW,KAAK,CAACX,UAAzB,GAAsC,OAAS;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,MAAMiB,WAAW,GAAGhC,MAAM,CAACyB,GAAI;AAC/B;AACA,CAFA;AAGA,MAAMQ,SAAS,GAAGjC,MAAM,CAACyB,GAAI;AAC7B;AACA,CAFA","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport RedAsterisk from '../redAsterisk/index';\n\nexport const getErrorMessage = (showErrorMessage, excessCharacters) => {\n  return (\n    <ErrorMessage\n      initial={{ opacity: 0, height: 0 }}\n      animate={\n        showErrorMessage\n          ? { opacity: 1, height: 'auto' }\n          : { opacity: 0, height: 0, transition: { height: { delay: 0.5 } } }\n      }\n    >\n      Your message is {excessCharacters} characters too long\n    </ErrorMessage>\n  );\n};\n\nexport const getLabel = (\n  compulsory,\n  labelHeader,\n  labelDesc,\n  textId,\n  labelWidth\n) => {\n  return (\n    <TextLabel labelWidth={labelWidth} htmlFor={textId}>\n      {compulsory ? <RedAsterisk>*</RedAsterisk> : <></>}\n      <LabelHeader>{labelHeader}</LabelHeader>\n      <LabelDesc>{labelDesc}</LabelDesc>\n    </TextLabel>\n  );\n};\n\nexport const limitSize = (\n  e,\n  characterMax,\n  setShowErrorMessage,\n  setExcessCharacters\n) => {\n  if (characterMax !== null && e.target.value.length > characterMax) {\n    setShowErrorMessage(true);\n    setExcessCharacters(e.target.value.length - characterMax);\n  } else if (characterMax !== null && e.target.value.length <= characterMax) {\n    setShowErrorMessage(false);\n  }\n};\n\nconst ErrorMessage = styled(motion.div)`\n  color: ${(props) => props.theme.colors.red};\n  margin-top: 0.2rem;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  font-family: 'Manrope', 'Roboto', 'Helvetica', 'Arial';\n`;\n\nconst TextLabel = styled.label`\n  margin-right: 0.5rem;\n  max-width: ${(props) => (props.labelWidth ? props.labelWidth : '15rem')};\n  display: inline-block;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  font-size: 1.125rem;\n  font-family: 'Manrope', 'Roboto', 'Helvetica', 'Arial';\n  height: fit-content;\n  padding: 0.3rem 0;\n  @media only screen and (max-width: 768px) {\n    padding: 0 0.35rem 0.3rem;\n    max-width: 70%;\n  }\n`;\n\nconst LabelHeader = styled.div`\n  font-size: 1.125rem;\n`;\nconst LabelDesc = styled.div`\n  font-size: 0.875rem;\n`;\n"]},"metadata":{},"sourceType":"module"}