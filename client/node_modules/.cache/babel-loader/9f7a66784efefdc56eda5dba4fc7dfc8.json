{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/checkbox/index.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled, { withTheme, css } from 'styled-components';\nimport { useMotionValue, motion, useTransform } from 'framer-motion';\nimport { useFocused, useViewport } from '../customHooks/index'; // orderNum is for when you want border radius on sides of mobile version\n\nconst Checkbox = ({\n  theme,\n  labelText,\n  orderNum\n}) => {\n  const [clicked, setClicked] = useState(false);\n  const checkbox = useRef(null);\n  const checkboxFocused = useFocused(checkbox);\n  const pathLength = useMotionValue(0);\n  const opacity = useTransform(pathLength, [0.05, 0.15], [0, 1]);\n  const {\n    width\n  } = useViewport();\n  const breakpoint = 600;\n  const boxVariants = {\n    checked: {\n      background: '#696969'\n    },\n    unchecked: {\n      background: '#ffffff'\n    }\n  };\n  const checkVariants = {\n    checked: {\n      pathLength: 0.9\n    },\n    unchecked: {\n      pathLength: 0\n    }\n  };\n\n  const onKeypress = e => {\n    if (e.keyCode === 13) {\n      checkbox.current.click();\n    }\n  };\n\n  useEffect(() => {\n    if (checkboxFocused) {\n      document.addEventListener('keypress', onKeypress);\n    }\n\n    return () => {\n      document.removeEventListener('keypress', onKeypress);\n    };\n  }, [checkboxFocused]);\n  return /*#__PURE__*/React.createElement(LabelContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxContainer, {\n    tabIndex: 0,\n    ref: checkbox,\n    onClick: () => {\n      setClicked(!clicked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledCheckbox, {\n    clicked: clicked,\n    orderNum: orderNum,\n    variants: boxVariants,\n    initial: 'checked',\n    animate: clicked ? 'checked' : 'unchecked',\n    transition: {\n      type: 'spring',\n      stiffness: 300,\n      damping: 20\n    },\n    onTap: () => setClicked(!clicked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, width <= breakpoint ? /*#__PURE__*/React.createElement(MobileLabel, {\n    clicked: clicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, labelText) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"25\",\n    height: \"25\",\n    viewBox: \" 0 0 150 150\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(motion.path, {\n    d: \"M38 74.707l24.647 24.646L116.5 45.5\",\n    fill: \"transparent\",\n    strokeWidth: \"15\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    variants: checkVariants,\n    style: {\n      pathLength: pathLength,\n      opacity: opacity\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })))), width <= breakpoint ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(CheckboxLabel, {\n    onClick: () => {\n      setClicked(!clicked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, labelText));\n};\n\nconst LabelContainer = styled.div`\n  display: flex;\n  align-items: center;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n`;\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  outline-color: ${props => props.theme.colors.blue};\n`;\nconst MobileLabel = styled.h3`\n  font-family: 'Roboto', 'Helvetica', 'Arial';\n  font-size: 0.8125rem;\n  font-weight: 400;\n  text-align: center;\n  color: ${props => props.clicked ? props.theme.colors.fullWhite : props.theme.colors.checkboxGray};\n`;\nconst StyledCheckbox = styled(motion.div)`\n  width: 25px;\n  height: 25px;\n  border-radius: 0.3125rem;\n  /*background-color: ${props => props.clicked ? props.theme.colors.checkboxGray : props.theme.colors.fullWhite};*/\n  border: 0.03125rem solid\n    ${props => props.clicked ? props.theme.colors.checkboxGray : props.theme.colors.gray};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  @media screen and (max-width: 600px) {\n    width: 6.6rem;\n    height: 2rem;\n    border-radius: 0;\n    ${props => props.orderNum === 0 && css`\n        border-top-left-radius: 2rem;\n        border-bottom-left-radius: 2rem;\n      `}\n    ${props => props.orderNum === 2 && css`\n        border-top-right-radius: 2rem;\n        border-bottom-right-radius: 2rem;\n      `}\n  }\n`;\nconst CheckboxLabel = styled.label`\n  color: ${props => props.theme.colors.checkboxGray};\n  font-size: 1.125rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  margin-left: 0.65rem;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  height: auto;\n  width: auto;\n  -ms-user-select: none;\n  cursor: pointer;\n`;\nconst Check = styled.svg`\n  width: 14px;\n  height: 11px;\n  fill: none;\n`;\nexport default withTheme(Checkbox);","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/checkbox/index.js"],"names":["React","useState","useRef","useEffect","styled","withTheme","css","useMotionValue","motion","useTransform","useFocused","useViewport","Checkbox","theme","labelText","orderNum","clicked","setClicked","checkbox","checkboxFocused","pathLength","opacity","width","breakpoint","boxVariants","checked","background","unchecked","checkVariants","onKeypress","e","keyCode","current","click","document","addEventListener","removeEventListener","type","stiffness","damping","LabelContainer","div","CheckboxContainer","props","colors","blue","MobileLabel","h3","fullWhite","checkboxGray","StyledCheckbox","gray","CheckboxLabel","label","Check","svg"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled, { withTheme, css } from 'styled-components';\nimport { useMotionValue, motion, useTransform } from 'framer-motion';\nimport { useFocused, useViewport } from '../customHooks/index';\n\n// orderNum is for when you want border radius on sides of mobile version\n\nconst Checkbox = ({ theme, labelText, orderNum }) => {\n  const [clicked, setClicked] = useState(false);\n  const checkbox = useRef(null);\n  const checkboxFocused = useFocused(checkbox);\n  const pathLength = useMotionValue(0);\n  const opacity = useTransform(pathLength, [0.05, 0.15], [0, 1]);\n  const { width } = useViewport();\n  const breakpoint = 600;\n  const boxVariants = {\n    checked: {\n      background: '#696969',\n    },\n    unchecked: { background: '#ffffff' },\n  };\n\n  const checkVariants = {\n    checked: { pathLength: 0.9 },\n    unchecked: { pathLength: 0 },\n  };\n\n  const onKeypress = (e) => {\n    if (e.keyCode === 13) {\n      checkbox.current.click();\n    }\n  };\n\n  useEffect(() => {\n    if (checkboxFocused) {\n      document.addEventListener('keypress', onKeypress);\n    }\n    return () => {\n      document.removeEventListener('keypress', onKeypress);\n    };\n  }, [checkboxFocused]);\n\n  return (\n    <LabelContainer>\n      <CheckboxContainer\n        tabIndex={0}\n        ref={checkbox}\n        onClick={() => {\n          setClicked(!clicked);\n        }}\n      >\n        <StyledCheckbox\n          clicked={clicked}\n          orderNum={orderNum}\n          variants={boxVariants}\n          initial={'checked'}\n          animate={clicked ? 'checked' : 'unchecked'}\n          transition={{ type: 'spring', stiffness: 300, damping: 20 }}\n          onTap={() => setClicked(!clicked)}\n        >\n          {width <= breakpoint ? (\n            <MobileLabel clicked={clicked}>{labelText}</MobileLabel>\n          ) : (\n            <></>\n          )}\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            width='25'\n            height='25'\n            viewBox=' 0 0 150 150'\n          >\n            <motion.path\n              d='M38 74.707l24.647 24.646L116.5 45.5'\n              fill='transparent'\n              strokeWidth='15'\n              stroke='white'\n              strokeLinecap='round'\n              variants={checkVariants}\n              style={{ pathLength: pathLength, opacity: opacity }}\n            />\n          </svg>\n        </StyledCheckbox>\n      </CheckboxContainer>\n      {width <= breakpoint ? (\n        <></>\n      ) : (\n        <CheckboxLabel\n          onClick={() => {\n            setClicked(!clicked);\n          }}\n        >\n          {labelText}\n        </CheckboxLabel>\n      )}\n    </LabelContainer>\n  );\n};\n\nconst LabelContainer = styled.div`\n  display: flex;\n  align-items: center;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n`;\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  outline-color: ${(props) => props.theme.colors.blue};\n`;\n\nconst MobileLabel = styled.h3`\n  font-family: 'Roboto', 'Helvetica', 'Arial';\n  font-size: 0.8125rem;\n  font-weight: 400;\n  text-align: center;\n  color: ${(props) =>\n    props.clicked\n      ? props.theme.colors.fullWhite\n      : props.theme.colors.checkboxGray};\n`;\n\nconst StyledCheckbox = styled(motion.div)`\n  width: 25px;\n  height: 25px;\n  border-radius: 0.3125rem;\n  /*background-color: ${(props) =>\n    props.clicked\n      ? props.theme.colors.checkboxGray\n      : props.theme.colors.fullWhite};*/\n  border: 0.03125rem solid\n    ${(props) =>\n      props.clicked\n        ? props.theme.colors.checkboxGray\n        : props.theme.colors.gray};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  @media screen and (max-width: 600px) {\n    width: 6.6rem;\n    height: 2rem;\n    border-radius: 0;\n    ${(props) =>\n      props.orderNum === 0 &&\n      css`\n        border-top-left-radius: 2rem;\n        border-bottom-left-radius: 2rem;\n      `}\n    ${(props) =>\n      props.orderNum === 2 &&\n      css`\n        border-top-right-radius: 2rem;\n        border-bottom-right-radius: 2rem;\n      `}\n  }\n`;\n\nconst CheckboxLabel = styled.label`\n  color: ${(props) => props.theme.colors.checkboxGray};\n  font-size: 1.125rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  margin-left: 0.65rem;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  height: auto;\n  width: auto;\n  -ms-user-select: none;\n  cursor: pointer;\n`;\n\nconst Check = styled.svg`\n  width: 14px;\n  height: 11px;\n  fill: none;\n`;\n\nexport default withTheme(Checkbox);\n"]},"metadata":{},"sourceType":"module"}