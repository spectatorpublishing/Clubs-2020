{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/textInput/index.js\";\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { getErrorMessage, getLabel, limitSize } from './helper';\n\nconst TextInput = ({\n  height,\n  width,\n  multiline,\n  labelHeader,\n  labelDesc,\n  compulsory,\n  placeholder,\n  characterMax,\n  identifier,\n  handleChange\n}) => {\n  const [focused, setFocused] = useState(false);\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\n  const [excessCharacters, setExcessCharacters] = useState(0);\n  const inputVariants = {\n    init: {\n      boxShadow: '2px 10px 30px rgba(0, 0, 0, 0.05)',\n      transition: {\n        duration: 0.3\n      }\n    },\n    anim: {\n      boxShadow: '2px 10px 30px rgba(120, 192, 245, 0.5)',\n      transition: {\n        duration: 0.3\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, multiline ? /*#__PURE__*/React.createElement(TextContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, getLabel(compulsory, labelHeader, labelDesc, identifier), /*#__PURE__*/React.createElement(FlexCol, {\n    width: width,\n    multiline: multiline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledTextArea, {\n    id: identifier,\n    name: identifier,\n    height: height,\n    variants: inputVariants,\n    focused: focused,\n    placeholder: placeholder,\n    onFocus: () => {\n      setFocused(true);\n    },\n    onBlur: () => {\n      setFocused(false);\n    },\n    onChange: e => {\n      limitSize(e, characterMax, setShowErrorMessage, setExcessCharacters);\n      {\n        () => {\n          handleChange(e);\n        };\n      }\n    },\n    initial: \"init\",\n    animate: focused ? 'anim' : 'init',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), getErrorMessage(showErrorMessage, excessCharacters))) : /*#__PURE__*/React.createElement(TextContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, getLabel(compulsory, labelHeader, labelDesc, identifier), /*#__PURE__*/React.createElement(FlexCol, {\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledInput, {\n    id: identifier,\n    name: identifier,\n    height: height,\n    variants: inputVariants,\n    focused: focused,\n    placeholder: placeholder,\n    onFocus: () => {\n      setFocused(true);\n    },\n    onBlur: () => {\n      setFocused(false);\n    },\n    onChange: e => {\n      limitSize(e, characterMax, setShowErrorMessage, setExcessCharacters);\n      {\n        () => {\n          handleChange(e);\n        };\n      }\n    },\n    initial: \"init\",\n    animate: focused ? 'anim' : 'init',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), getErrorMessage(showErrorMessage, excessCharacters))));\n};\n\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 1rem 0 0 0.3rem;\n  @media only screen and (max-width: 768px) {\n    flex-direction: column !important;\n  }\n`;\nconst FlexCol = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  width: ${props => props.width ? props.width : 'auto'};\n\n  @media only screen and (max-width: 768px) {\n    ${props => props.multiline && css`\n        height: calc(${props => props.height} + 5rem) !important;\n      `}\n  }\n`;\nconst InputStyles = css`\n  background: ${props => props.theme.colors.fullWhite};\n  border: none;\n  border-radius: 7px;\n  padding: 0.5rem;\n  height: ${props => props.height ? props.height : 'auto'};\n  width: 95%;\n  font-size: 1.125rem;\n  color: ${props => props.theme.colors.checkboxGray};\n  font-family: 'Roboto', 'Helvetica', 'Arial';\n  resize: none;\n  outline-color: ${props => props.theme.colors.blue};\n  overflow-y: auto;\n  cursor: pointer;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n`;\nconst StyledTextArea = styled(motion.textarea)`\n  ${InputStyles}\n`;\nconst StyledInput = styled(motion.input)`\n  ${InputStyles}\n`;\nexport default TextInput;","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/textInput/index.js"],"names":["React","useState","styled","css","motion","getErrorMessage","getLabel","limitSize","TextInput","height","width","multiline","labelHeader","labelDesc","compulsory","placeholder","characterMax","identifier","handleChange","focused","setFocused","showErrorMessage","setShowErrorMessage","excessCharacters","setExcessCharacters","inputVariants","init","boxShadow","transition","duration","anim","e","TextContainer","div","FlexCol","props","InputStyles","theme","colors","fullWhite","checkboxGray","blue","StyledTextArea","textarea","StyledInput","input"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { getErrorMessage, getLabel, limitSize } from './helper';\n\nconst TextInput = ({\n  height,\n  width,\n  multiline,\n  labelHeader,\n  labelDesc,\n  compulsory,\n  placeholder,\n  characterMax,\n  identifier,\n  handleChange,\n}) => {\n  const [focused, setFocused] = useState(false);\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\n  const [excessCharacters, setExcessCharacters] = useState(0);\n  const inputVariants = {\n    init: {\n      boxShadow: '2px 10px 30px rgba(0, 0, 0, 0.05)',\n      transition: { duration: 0.3 },\n    },\n    anim: {\n      boxShadow: '2px 10px 30px rgba(120, 192, 245, 0.5)',\n      transition: { duration: 0.3 },\n    },\n  };\n\n  return (\n    <>\n      {multiline ? (\n        <TextContainer>\n          {getLabel(compulsory, labelHeader, labelDesc, identifier)}\n\n          <FlexCol width={width} multiline={multiline}>\n            <StyledTextArea\n              id={identifier}\n              name={identifier}\n              height={height}\n              variants={inputVariants}\n              focused={focused}\n              placeholder={placeholder}\n              onFocus={() => {\n                setFocused(true);\n              }}\n              onBlur={() => {\n                setFocused(false);\n              }}\n              onChange={(e) => {\n                limitSize(\n                  e,\n                  characterMax,\n                  setShowErrorMessage,\n                  setExcessCharacters\n                );\n                {\n                  () => {\n                    handleChange(e);\n                  };\n                }\n              }}\n              initial='init'\n              animate={focused ? 'anim' : 'init'}\n            />\n            {getErrorMessage(showErrorMessage, excessCharacters)}\n          </FlexCol>\n        </TextContainer>\n      ) : (\n        <TextContainer>\n          {getLabel(compulsory, labelHeader, labelDesc, identifier)}\n          <FlexCol width={width}>\n            <StyledInput\n              id={identifier}\n              name={identifier}\n              height={height}\n              variants={inputVariants}\n              focused={focused}\n              placeholder={placeholder}\n              onFocus={() => {\n                setFocused(true);\n              }}\n              onBlur={() => {\n                setFocused(false);\n              }}\n              onChange={(e) => {\n                limitSize(\n                  e,\n                  characterMax,\n                  setShowErrorMessage,\n                  setExcessCharacters\n                );\n                {\n                  () => {\n                    handleChange(e);\n                  };\n                }\n              }}\n              initial='init'\n              animate={focused ? 'anim' : 'init'}\n            />\n            {getErrorMessage(showErrorMessage, excessCharacters)}\n          </FlexCol>\n        </TextContainer>\n      )}\n    </>\n  );\n};\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 1rem 0 0 0.3rem;\n  @media only screen and (max-width: 768px) {\n    flex-direction: column !important;\n  }\n`;\n\nconst FlexCol = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  width: ${(props) => (props.width ? props.width : 'auto')};\n\n  @media only screen and (max-width: 768px) {\n    ${(props) =>\n      props.multiline &&\n      css`\n        height: calc(${(props) => props.height} + 5rem) !important;\n      `}\n  }\n`;\n\nconst InputStyles = css`\n  background: ${(props) => props.theme.colors.fullWhite};\n  border: none;\n  border-radius: 7px;\n  padding: 0.5rem;\n  height: ${(props) => (props.height ? props.height : 'auto')};\n  width: 95%;\n  font-size: 1.125rem;\n  color: ${(props) => props.theme.colors.checkboxGray};\n  font-family: 'Roboto', 'Helvetica', 'Arial';\n  resize: none;\n  outline-color: ${(props) => props.theme.colors.blue};\n  overflow-y: auto;\n  cursor: pointer;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n`;\n\nconst StyledTextArea = styled(motion.textarea)`\n  ${InputStyles}\n`;\n\nconst StyledInput = styled(motion.input)`\n  ${InputStyles}\n`;\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}