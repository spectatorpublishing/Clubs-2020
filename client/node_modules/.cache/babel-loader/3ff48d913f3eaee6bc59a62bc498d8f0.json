{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/textInput/helper.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nexport const getErrorMessage = (showErrorMessage, excessCharacters) => {\n  return /*#__PURE__*/React.createElement(ErrorMessage, {\n    initial: {\n      opacity: 0,\n      height: 0\n    },\n    animate: {\n      opacity: 1,\n      height: 'auto'\n    },\n    exit: {\n      opacity: 0,\n      height: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, \"Your message is \", excessCharacters, \" characters too long\");\n};\nexport const getLabel = (compulsory, labelHeader, labelDesc, textId) => {\n  return /*#__PURE__*/React.createElement(TextLabel, {\n    htmlFor: textId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, compulsory ? /*#__PURE__*/React.createElement(RedAsterisk, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"*\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 52\n    }\n  }), /*#__PURE__*/React.createElement(LabelHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, labelHeader), /*#__PURE__*/React.createElement(LabelDesc, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, labelDesc));\n};\nexport const limitSize = (e, characterMax, setShowErrorMessage, setExcessCharacters) => {\n  if (e.target.value.length > characterMax) {\n    setShowErrorMessage(true);\n    setExcessCharacters(e.target.value.length - characterMax);\n  } else if (e.target.value.length <= characterMax) {\n    setShowErrorMessage(false);\n    setExcessCharacters(0);\n  }\n};\nconst ErrorMessage = styled(motion.div)`\n  color: ${props => props.theme.colors.red};\n  margin-top: 0.2rem;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n`;\nconst TextLabel = styled.label`\n  margin-right: 0.5rem;\n  width: 15rem;\n  display: inline-block;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  font-size: 1.125rem;\n  font-family: 'Roboto', 'Helvetica', 'Arial';\n  height: fit-content;\n  padding: 0.3rem 0;\n  @media only screen and (max-width: 768px) {\n    padding: 0 0.35rem 0.3rem;\n    max-width: 70%;\n  }\n`;\nconst LabelHeader = styled.div`\n  font-size: 1.125rem;\n`;\nconst LabelDesc = styled.div`\n  font-size: 0.875rem;\n`;\nconst RedAsterisk = styled.span`\n  position: absolute;\n  margin: -0.9rem 0 0 -0.575rem;\n  font-size: 1.5625rem;\n  color: ${props => props.theme.colors.red};\n`;","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/textInput/helper.js"],"names":["React","styled","motion","AnimatePresence","getErrorMessage","showErrorMessage","excessCharacters","opacity","height","getLabel","compulsory","labelHeader","labelDesc","textId","limitSize","e","characterMax","setShowErrorMessage","setExcessCharacters","target","value","length","ErrorMessage","div","props","theme","colors","red","TextLabel","label","LabelHeader","LabelDesc","RedAsterisk","span"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,eAAxC;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,gBAAD,EAAmBC,gBAAnB,KAAwC;AACrE,sBACE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KADX;AAEE,IAAA,OAAO,EAAE;AAAED,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAFX;AAGE,IAAA,IAAI,EAAE;AAAED,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAKmBF,gBALnB,yBADF;AASD,CAVM;AAYP,OAAO,MAAMG,QAAQ,GAAG,CAACC,UAAD,EAAaC,WAAb,EAA0BC,SAA1B,EAAqCC,MAArC,KAAgD;AACtE,sBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,UAAU,gBAAG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH,gBAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/C,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcC,WAAd,CAFF,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYC,SAAZ,CAHF,CADF;AAOD,CARM;AAUP,OAAO,MAAME,SAAS,GAAG,CACvBC,CADuB,EAEvBC,YAFuB,EAGvBC,mBAHuB,EAIvBC,mBAJuB,KAKpB;AACH,MAAIH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwBL,YAA5B,EAA0C;AACxCC,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAC,IAAAA,mBAAmB,CAACH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwBL,YAAzB,CAAnB;AACD,GAHD,MAGO,IAAID,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeC,MAAf,IAAyBL,YAA7B,EAA2C;AAChDC,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAC,IAAAA,mBAAmB,CAAC,CAAD,CAAnB;AACD;AACF,CAbM;AAeP,MAAMI,YAAY,GAAGrB,MAAM,CAACC,MAAM,CAACqB,GAAR,CAAa;AACxC,WAAWC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,GAAI;AAC3C;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMC,SAAS,GAAG3B,MAAM,CAAC4B,KAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,MAAMC,WAAW,GAAG7B,MAAM,CAACsB,GAAI;AAC/B;AACA,CAFA;AAGA,MAAMQ,SAAS,GAAG9B,MAAM,CAACsB,GAAI;AAC7B;AACA,CAFA;AAGA,MAAMS,WAAW,GAAG/B,MAAM,CAACgC,IAAK;AAChC;AACA;AACA;AACA,WAAWT,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,GAAI;AAC3C,CALA","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nexport const getErrorMessage = (showErrorMessage, excessCharacters) => {\n  return (\n    <ErrorMessage\n      initial={{ opacity: 0, height: 0 }}\n      animate={{ opacity: 1, height: 'auto' }}\n      exit={{ opacity: 0, height: 0 }}\n    >\n      Your message is {excessCharacters} characters too long\n    </ErrorMessage>\n  );\n};\n\nexport const getLabel = (compulsory, labelHeader, labelDesc, textId) => {\n  return (\n    <TextLabel htmlFor={textId}>\n      {compulsory ? <RedAsterisk>*</RedAsterisk> : <div />}\n      <LabelHeader>{labelHeader}</LabelHeader>\n      <LabelDesc>{labelDesc}</LabelDesc>\n    </TextLabel>\n  );\n};\n\nexport const limitSize = (\n  e,\n  characterMax,\n  setShowErrorMessage,\n  setExcessCharacters\n) => {\n  if (e.target.value.length > characterMax) {\n    setShowErrorMessage(true);\n    setExcessCharacters(e.target.value.length - characterMax);\n  } else if (e.target.value.length <= characterMax) {\n    setShowErrorMessage(false);\n    setExcessCharacters(0);\n  }\n};\n\nconst ErrorMessage = styled(motion.div)`\n  color: ${props => props.theme.colors.red};\n  margin-top: 0.2rem;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n`;\n\nconst TextLabel = styled.label`\n  margin-right: 0.5rem;\n  width: 15rem;\n  display: inline-block;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  font-size: 1.125rem;\n  font-family: 'Roboto', 'Helvetica', 'Arial';\n  height: fit-content;\n  padding: 0.3rem 0;\n  @media only screen and (max-width: 768px) {\n    padding: 0 0.35rem 0.3rem;\n    max-width: 70%;\n  }\n`;\n\nconst LabelHeader = styled.div`\n  font-size: 1.125rem;\n`;\nconst LabelDesc = styled.div`\n  font-size: 0.875rem;\n`;\nconst RedAsterisk = styled.span`\n  position: absolute;\n  margin: -0.9rem 0 0 -0.575rem;\n  font-size: 1.5625rem;\n  color: ${props => props.theme.colors.red};\n`;\n"]},"metadata":{},"sourceType":"module"}