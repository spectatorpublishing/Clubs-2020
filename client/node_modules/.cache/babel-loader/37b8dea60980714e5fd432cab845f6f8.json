{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/checkbox/index.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useFocused } from '../customHooks/index';\n\nconst Checkbox = ({\n  theme,\n  labelText\n}) => {\n  const [clicked, setClicked] = useState(false);\n  const checkbox = useRef(null);\n  const checkboxFocused = useFocused(checkbox);\n\n  const onKeypress = e => {\n    if (e.keyCode === 13) {\n      checkbox.current.click();\n    }\n  };\n\n  useEffect(() => {\n    if (checkboxFocused) {\n      document.addEventListener('keypress', onKeypress);\n    }\n\n    return () => {\n      document.removeEventListener('keypress', onKeypress);\n    };\n  }, [checkboxFocused]);\n  return /*#__PURE__*/React.createElement(LabelContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxContainer, {\n    tabIndex: 0,\n    ref: checkbox,\n    onClick: () => {\n      setClicked(!clicked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledCheckbox, {\n    clicked: clicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, clicked ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, labelText), /*#__PURE__*/React.createElement(Check, {\n    width: \"14\",\n    height: \"11\",\n    viewBox: \"0 0 14 11\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/Check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 1.5L4.75 9.75L1 6\",\n    stroke: theme.colors.white,\n    strokeWidth: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(CheckboxLabel, {\n    onClick: () => {\n      setClicked(!clicked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, labelText));\n};\n\nconst LabelContainer = styled.div`\n  display: flex;\n  align-items: center;\n  @media screen and (max-width: 600px) {\n    display: block;\n  }\n`;\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  outline-color: ${props => props.theme.colors.blue};\n`;\nconst StyledCheckbox = styled(motion.div)`\n  width: 1.25rem;\n  height: 1.25rem;\n  border-radius: 0.3125rem;\n  background-color: ${props => props.clicked ? props.theme.colors.checkboxGray : props.theme.colors.fullWhite};\n  border: 0.03125rem solid\n    ${props => props.clicked ? props.theme.colors.checkboxGray : props.theme.colors.gray};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  @media screen and (max-width: 600px) {\n    width: 6.687rem;\n    height: 2rem;\n    border-radius: 0;\n  }\n`;\nconst CheckboxLabel = styled.label`\n  color: ${props => props.theme.colors.checkboxGray};\n  font-size: 1.125rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  margin-left: 0.65rem;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  height: auto;\n  width: auto;\n  -ms-user-select: none;\n  cursor: pointer;\n  @media screen and (max-width: 600px) {\n    width: 0;\n    height: 0;\n    overflow: hidden;\n    display: inline-block;\n  }\n`;\nconst Check = styled.svg`\n  width: 14px;\n  height: 11px;\n  fill: none;\n  @media screen and (max-width: 600px) {\n    width: 0;\n    height: 0;\n  }\n`;\nexport default withTheme(Checkbox);","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/checkbox/index.js"],"names":["React","useState","useRef","useEffect","styled","withTheme","motion","useFocused","Checkbox","theme","labelText","clicked","setClicked","checkbox","checkboxFocused","onKeypress","e","keyCode","current","click","document","addEventListener","removeEventListener","colors","white","LabelContainer","div","CheckboxContainer","props","blue","StyledCheckbox","checkboxGray","fullWhite","gray","CheckboxLabel","label","Check","svg"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useFocused } from '../customHooks/index';\n\nconst Checkbox = ({ theme, labelText }) => {\n  const [clicked, setClicked] = useState(false);\n  const checkbox = useRef(null);\n  const checkboxFocused = useFocused(checkbox);\n\n  const onKeypress = (e) => {\n    if (e.keyCode === 13) {\n      checkbox.current.click();\n    }\n  };\n\n  useEffect(() => {\n    if (checkboxFocused) {\n      document.addEventListener('keypress', onKeypress);\n    }\n    return () => {\n      document.removeEventListener('keypress', onKeypress);\n    };\n  }, [checkboxFocused]);\n\n  return (\n    <LabelContainer>\n      <CheckboxContainer\n        tabIndex={0}\n        ref={checkbox}\n        onClick={() => {\n          setClicked(!clicked);\n        }}\n      >\n        <StyledCheckbox clicked={clicked}>\n          {clicked ? (\n            <>\n              <div>{labelText}</div>\n\n              <Check\n                width='14'\n                height='11'\n                viewBox='0 0 14 11'\n                fill='none'\n                xmlns='http://www.w3.org/2000/Check'\n              >\n                <path\n                  d='M13 1.5L4.75 9.75L1 6'\n                  stroke={theme.colors.white}\n                  strokeWidth={2}\n                />\n              </Check>\n            </>\n          ) : (\n            <div></div>\n          )}\n        </StyledCheckbox>\n      </CheckboxContainer>\n      <CheckboxLabel\n        onClick={() => {\n          setClicked(!clicked);\n        }}\n      >\n        {labelText}\n      </CheckboxLabel>\n    </LabelContainer>\n  );\n};\n\nconst LabelContainer = styled.div`\n  display: flex;\n  align-items: center;\n  @media screen and (max-width: 600px) {\n    display: block;\n  }\n`;\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  outline-color: ${(props) => props.theme.colors.blue};\n`;\n\nconst StyledCheckbox = styled(motion.div)`\n  width: 1.25rem;\n  height: 1.25rem;\n  border-radius: 0.3125rem;\n  background-color: ${(props) =>\n    props.clicked\n      ? props.theme.colors.checkboxGray\n      : props.theme.colors.fullWhite};\n  border: 0.03125rem solid\n    ${(props) =>\n      props.clicked\n        ? props.theme.colors.checkboxGray\n        : props.theme.colors.gray};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  @media screen and (max-width: 600px) {\n    width: 6.687rem;\n    height: 2rem;\n    border-radius: 0;\n  }\n`;\n\nconst CheckboxLabel = styled.label`\n  color: ${(props) => props.theme.colors.checkboxGray};\n  font-size: 1.125rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  margin-left: 0.65rem;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  height: auto;\n  width: auto;\n  -ms-user-select: none;\n  cursor: pointer;\n  @media screen and (max-width: 600px) {\n    width: 0;\n    height: 0;\n    overflow: hidden;\n    display: inline-block;\n  }\n`;\n\nconst Check = styled.svg`\n  width: 14px;\n  height: 11px;\n  fill: none;\n  @media screen and (max-width: 600px) {\n    width: 0;\n    height: 0;\n  }\n`;\n\nexport default withTheme(Checkbox);\n"]},"metadata":{},"sourceType":"module"}