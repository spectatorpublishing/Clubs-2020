{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/filledButton/index.js\";\nimport React from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { withRouter } from 'react-router-dom';\n\nconst FilledButton = ({\n  theme,\n  text,\n  stateFunc,\n  stateVal,\n  onClick,\n  path,\n  history\n}) => {\n  const handleClick = () => {\n    // For updating path\n    if (path) {\n      setTimeout(function () {\n        history.push('/profile-creation/2');\n      }, 200);\n    } // For state change\n    else if (!onClick) {\n        if (stateFunc) stateFunc(!stateVal);else console.error(`state func not defined for button with text \"${text}\"`);\n      } // For custom function\n      else {\n          onClick();\n        }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledButton, {\n    whileHover: {\n      backgroundColor: theme.colors.darkRed\n    },\n    whileTap: {\n      backgroundColor: '#C45B45',\n      scale: 0.95\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, text ? text : 'no text passed in');\n};\n\nconst StyledButton = styled(motion.button)`\n  min-width: 6.4375rem;\n  max-width: 13rem;\n  min-height: 2.225rem;\n  width: auto;\n  background: ${props => props.theme.colors.red};\n  color: ${props => props.theme.colors.fullWhite};\n  border-radius: 0.4375rem;\n  border: none;\n  padding: 0.3rem;\n  font-size: 1rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\nexport default withTheme(FilledButton);","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/filledButton/index.js"],"names":["React","styled","withTheme","motion","withRouter","FilledButton","theme","text","stateFunc","stateVal","onClick","path","history","handleClick","setTimeout","push","console","error","backgroundColor","colors","darkRed","scale","StyledButton","button","props","red","fullWhite"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,QAA1B;AAAoCC,EAAAA,OAApC;AAA6CC,EAAAA,IAA7C;AAAmDC,EAAAA;AAAnD,CAAD,KAAkE;AACrF,QAAMC,WAAW,GAAG,MAAM;AACxB;AACA,QAAGF,IAAH,EAAQ;AACNG,MAAAA,UAAU,CAAC,YAAW;AACpBF,QAAAA,OAAO,CAACG,IAAR,CAAa,qBAAb;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KAJD,CAKA;AALA,SAMK,IAAI,CAACL,OAAL,EAAc;AACjB,YAAIF,SAAJ,EAAeA,SAAS,CAAC,CAACC,QAAF,CAAT,CAAf,KAEEO,OAAO,CAACC,KAAR,CAAe,gDAA+CV,IAAK,GAAnE;AACH,OAJI,CAKL;AALK,WAMD;AACFG,UAAAA,OAAO;AACR;AACF,GAjBD;;AAkBA,sBACE,oBAAC,YAAD;AACE,IAAA,UAAU,EAAE;AAAEQ,MAAAA,eAAe,EAAEZ,KAAK,CAACa,MAAN,CAAaC;AAAhC,KADd;AAEE,IAAA,QAAQ,EAAE;AAAEF,MAAAA,eAAe,EAAE,SAAnB;AAA8BG,MAAAA,KAAK,EAAE;AAArC,KAFZ;AAGE,IAAA,OAAO,EAAER,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGN,IAAI,GAAGA,IAAH,GAAU,mBALjB,CADF;AASD,CA5BD;;AA8BA,MAAMe,YAAY,GAAGrB,MAAM,CAACE,MAAM,CAACoB,MAAR,CAAgB;AAC3C;AACA;AACA;AACA;AACA,gBAAgBC,KAAK,IAAIA,KAAK,CAAClB,KAAN,CAAYa,MAAZ,CAAmBM,GAAI;AAChD,WAAWD,KAAK,IAAIA,KAAK,CAAClB,KAAN,CAAYa,MAAZ,CAAmBO,SAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAiBA,eAAexB,SAAS,CAACG,YAAD,CAAxB","sourcesContent":["import React from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { withRouter } from 'react-router-dom';\n\nconst FilledButton = ({ theme, text, stateFunc, stateVal, onClick, path, history }) => {\n  const handleClick = () => {\n    // For updating path\n    if(path){\n      setTimeout(function() {\n        history.push('/profile-creation/2');\n      }, 200);\n    }\n    // For state change\n    else if (!onClick) {\n      if (stateFunc) stateFunc(!stateVal);\n      else\n        console.error(`state func not defined for button with text \"${text}\"`);\n    }\n    // For custom function\n    else{\n      onClick();\n    }\n  };\n  return (\n    <StyledButton\n      whileHover={{ backgroundColor: theme.colors.darkRed }}\n      whileTap={{ backgroundColor: '#C45B45', scale: 0.95 }}\n      onClick={handleClick}\n    >\n      {text ? text : 'no text passed in'}\n    </StyledButton>\n  );\n};\n\nconst StyledButton = styled(motion.button)`\n  min-width: 6.4375rem;\n  max-width: 13rem;\n  min-height: 2.225rem;\n  width: auto;\n  background: ${props => props.theme.colors.red};\n  color: ${props => props.theme.colors.fullWhite};\n  border-radius: 0.4375rem;\n  border: none;\n  padding: 0.3rem;\n  font-size: 1rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\nexport default withTheme(FilledButton);\n"]},"metadata":{},"sourceType":"module"}