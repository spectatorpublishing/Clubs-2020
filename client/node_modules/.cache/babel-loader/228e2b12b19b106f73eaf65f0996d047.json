{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/tomatoButton/index.js\";\nimport React from 'react';\nimport styled, { withTheme, css } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { withRouter } from 'react-router-dom';\n\nconst TomatoButton = ({\n  theme,\n  text,\n  stateFunc,\n  stateVal,\n  onClick,\n  wire,\n  path\n}) => {\n  const handleClick = () => {\n    // For state change\n    if (!onClick) {\n      if (stateFunc) stateFunc(!stateVal);\n    } // For custom function\n    else {\n        onClick();\n      }\n  };\n\n  let hoverEffect = {};\n  if (!wire) hoverEffect = {\n    backgroundColor: theme.colors.darkRed\n  };\n  return /*#__PURE__*/React.createElement(StyledButton, {\n    wire: wire,\n    whileHover: hoverEffect,\n    whileTap: {\n      scale: 0.95\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, text ? text : 'no text passed in');\n};\n\nconst StyledButton = styled(motion.button)`\n  min-width: 6.4375rem;\n  max-width: 13rem;\n  min-height: 2.225rem;\n  width: auto;\n  ${props => props.wire && css`\n      color: ${props => props.theme.colors.red};\n      background-color: transparent;\n      border: 1px solid ${props => props.theme.colors.red};\n    `}\n  ${props => !props.wire && css`\n      background-color: ${props => props.theme.colors.red};\n      color: ${props => props.theme.colors.fullWhite};\n      border: none;\n    `}\n  border-radius: 0.4375rem;\n\n  padding: 0.5rem;\n  font-size: 1rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: pointer;\n`;\nexport default withRouter(withTheme(TomatoButton));","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/tomatoButton/index.js"],"names":["React","styled","withTheme","css","motion","withRouter","TomatoButton","theme","text","stateFunc","stateVal","onClick","wire","path","handleClick","hoverEffect","backgroundColor","colors","darkRed","scale","StyledButton","button","props","red","fullWhite"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,EAA4BC,GAA5B,QAAuC,mBAAvC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,QAA1B;AAAoCC,EAAAA,OAApC;AAA6CC,EAAAA,IAA7C;AAAmDC,EAAAA;AAAnD,CAAD,KAA+D;AAClF,QAAMC,WAAW,GAAG,MAAM;AACxB;AACA,QAAI,CAACH,OAAL,EAAc;AACZ,UAAIF,SAAJ,EAAeA,SAAS,CAAC,CAACC,QAAF,CAAT;AAChB,KAFD,CAGA;AAHA,SAIK;AACHC,QAAAA,OAAO;AACR;AACF,GATD;;AAUA,MAAII,WAAW,GAAG,EAAlB;AACA,MAAI,CAACH,IAAL,EAAWG,WAAW,GAAG;AAAEC,IAAAA,eAAe,EAAET,KAAK,CAACU,MAAN,CAAaC;AAAhC,GAAd;AACX,sBACE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEN,IADR;AAEE,IAAA,UAAU,EAAEG,WAFd;AAGE,IAAA,QAAQ,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAHZ;AAIE,IAAA,OAAO,EAAEL,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGN,IAAI,GAAGA,IAAH,GAAU,mBANjB,CADF;AAUD,CAvBD;;AAyBA,MAAMY,YAAY,GAAGnB,MAAM,CAACG,MAAM,CAACiB,MAAR,CAAgB;AAC3C;AACA;AACA;AACA;AACA,IAAKC,KAAD,IACAA,KAAK,CAACV,IAAN,IACAT,GAAI;AACR,eAAgBmB,KAAD,IAAWA,KAAK,CAACf,KAAN,CAAYU,MAAZ,CAAmBM,GAAI;AACjD;AACA,0BAA2BD,KAAD,IAAWA,KAAK,CAACf,KAAN,CAAYU,MAAZ,CAAmBM,GAAI;AAC5D,KAAM;AACN,IAAKD,KAAD,IACA,CAACA,KAAK,CAACV,IAAP,IACAT,GAAI;AACR,0BAA2BmB,KAAD,IAAWA,KAAK,CAACf,KAAN,CAAYU,MAAZ,CAAmBM,GAAI;AAC5D,eAAgBD,KAAD,IAAWA,KAAK,CAACf,KAAN,CAAYU,MAAZ,CAAmBO,SAAU;AACvD;AACA,KAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;AA8BA,eAAenB,UAAU,CAACH,SAAS,CAACI,YAAD,CAAV,CAAzB","sourcesContent":["import React from 'react';\nimport styled, { withTheme, css } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { withRouter } from 'react-router-dom';\n\nconst TomatoButton = ({ theme, text, stateFunc, stateVal, onClick, wire, path }) => {\n  const handleClick = () => {\n    // For state change\n    if (!onClick) {\n      if (stateFunc) stateFunc(!stateVal);\n    }\n    // For custom function\n    else {\n      onClick();\n    }\n  };\n  let hoverEffect = {};\n  if (!wire) hoverEffect = { backgroundColor: theme.colors.darkRed };\n  return (\n    <StyledButton\n      wire={wire}\n      whileHover={hoverEffect}\n      whileTap={{ scale: 0.95 }}\n      onClick={handleClick}\n    >\n      {text ? text : 'no text passed in'}\n    </StyledButton>\n  );\n};\n\nconst StyledButton = styled(motion.button)`\n  min-width: 6.4375rem;\n  max-width: 13rem;\n  min-height: 2.225rem;\n  width: auto;\n  ${(props) =>\n    props.wire &&\n    css`\n      color: ${(props) => props.theme.colors.red};\n      background-color: transparent;\n      border: 1px solid ${(props) => props.theme.colors.red};\n    `}\n  ${(props) =>\n    !props.wire &&\n    css`\n      background-color: ${(props) => props.theme.colors.red};\n      color: ${(props) => props.theme.colors.fullWhite};\n      border: none;\n    `}\n  border-radius: 0.4375rem;\n\n  padding: 0.5rem;\n  font-size: 1rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: pointer;\n`;\nexport default withRouter(withTheme(TomatoButton));\n"]},"metadata":{},"sourceType":"module"}