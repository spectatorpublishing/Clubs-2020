{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/clubprofile/updateAccountInfo.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\n/* Pop-up Content Components */\n\nimport ManageAccount from './manageAccount';\nimport ChangeEmail from './changeEmail';\nimport ChangePassword from './changePassword';\nimport Confirmation from './confirmation';\n/* Todo: When the window pop-up, should the rest of the page be unclickable? */\n\nconst Modal = styled.div`\n    position: absolute;\n    top: 7%;\n    margin: 0 15%;\n    z-index: 999;\n    width: 60%;\n    background-color: white;\n    box-shadow: 2px 10px 30px rgba(0, 0, 0, 0.05);\n    border-radius: 9px;\n    padding: 2em 2em;\n`;\nconst Close = styled.button`\n    background-color: inherit;\n    color: ${props => props.theme.colors.black};\n    border: none;\n    /* position in parent: top right */\n    position: absolute;\n    top: 1em;\n    right: 1em;\n`;\nconst KeyToComponent = {\n  dashboard: ManageAccount,\n  email: ChangeEmail,\n  password: ChangePassword,\n  confirmation: Confirmation\n};\n\nconst Content = ({\n  page,\n  ...props\n}) => {\n  return React.createElement(KeyToComponent[page], props);\n};\n\nfunction UpdateAccount(props) {\n  const [currPage, setCurrPage] = useState('dashboard');\n\n  function reset() {\n    props.toggle(false);\n    setCurrPage('dashboard');\n  }\n\n  if (props.display) {\n    return /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Close, {\n      onClick: reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"\\u2716\"), /*#__PURE__*/React.createElement(Content, {\n      page: currPage,\n      setPage: setCurrPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return null;\n}\n\nexport default function Wrapper({\n  nodeId,\n  ...props\n}) {\n  const domNode = document.getElementById(nodeId);\n  return ReactDOM.createPortal( /*#__PURE__*/React.createElement(UpdateAccount, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 34\n    }\n  })), domNode);\n}","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/clubprofile/updateAccountInfo.js"],"names":["React","useState","ReactDOM","styled","ManageAccount","ChangeEmail","ChangePassword","Confirmation","Modal","div","Close","button","props","theme","colors","black","KeyToComponent","dashboard","email","password","confirmation","Content","page","createElement","UpdateAccount","currPage","setCurrPage","reset","toggle","display","Wrapper","nodeId","domNode","document","getElementById","createPortal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA;;AACA,MAAMC,KAAK,GAAGL,MAAM,CAACM,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,MAAMC,KAAK,GAAGP,MAAM,CAACQ,MAAO;AAC5B;AACA,aAAaC,KAAK,IAAEA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,KAAM;AAC7C;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,SAAS,EAAEb,aADQ;AAEnBc,EAAAA,KAAK,EAAEb,WAFY;AAGnBc,EAAAA,QAAQ,EAAEb,cAHS;AAInBc,EAAAA,YAAY,EAAEb;AAJK,CAAvB;;AAOA,MAAMc,OAAO,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAO,KAAGV;AAAV,CAAD,KAAsB;AAClC,SAAOZ,KAAK,CAACuB,aAAN,CAAoBP,cAAc,CAACM,IAAD,CAAlC,EAA0CV,KAA1C,CAAP;AACH,CAFD;;AAIA,SAASY,aAAT,CAAuBZ,KAAvB,EAA8B;AAC1B,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,WAAD,CAAxC;;AAEA,WAAS0B,KAAT,GAAiB;AACbf,IAAAA,KAAK,CAACgB,MAAN,CAAa,KAAb;AACAF,IAAAA,WAAW,CAAC,WAAD,CAAX;AACH;;AAED,MAAId,KAAK,CAACiB,OAAV,EAAmB;AACf,wBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEF,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEF,QAAf;AAAyB,MAAA,OAAO,EAAEC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAED,SAAO,IAAP;AACH;;AAED,eAAe,SAASI,OAAT,CAAiB;AAACC,EAAAA,MAAD;AAAS,KAAGnB;AAAZ,CAAjB,EAAqC;AAChD,QAAMoB,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,MAAxB,CAAhB;AAEA,SAAO7B,QAAQ,CAACiC,YAAT,eAAsB,oBAAC,aAAD,oBAAmBvB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB,EAAmDoB,OAAnD,CAAP;AACH","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\n/* Pop-up Content Components */\nimport ManageAccount from './manageAccount';\nimport ChangeEmail from './changeEmail';\nimport ChangePassword from './changePassword';\nimport Confirmation from './confirmation';\n\n/* Todo: When the window pop-up, should the rest of the page be unclickable? */\nconst Modal = styled.div`\n    position: absolute;\n    top: 7%;\n    margin: 0 15%;\n    z-index: 999;\n    width: 60%;\n    background-color: white;\n    box-shadow: 2px 10px 30px rgba(0, 0, 0, 0.05);\n    border-radius: 9px;\n    padding: 2em 2em;\n`\n\nconst Close = styled.button`\n    background-color: inherit;\n    color: ${props=>props.theme.colors.black};\n    border: none;\n    /* position in parent: top right */\n    position: absolute;\n    top: 1em;\n    right: 1em;\n`\n\nconst KeyToComponent = {\n    dashboard: ManageAccount,\n    email: ChangeEmail,\n    password: ChangePassword,\n    confirmation: Confirmation\n}\n\nconst Content = ({page, ...props}) => {\n    return React.createElement(KeyToComponent[page], props);\n}\n\nfunction UpdateAccount(props) {\n    const [currPage, setCurrPage] = useState('dashboard');\n\n    function reset() {\n        props.toggle(false);\n        setCurrPage('dashboard');\n    }\n\n    if (props.display) {\n        return (\n            <Modal>\n                <Close onClick={reset}>&#10006;</Close>\n                <Content page={currPage} setPage={setCurrPage} />\n            </Modal>\n        )\n    }\n\n    return null;\n}\n\nexport default function Wrapper({nodeId, ...props}) {\n    const domNode = document.getElementById(nodeId);\n\n    return ReactDOM.createPortal(<UpdateAccount {...props}/>, domNode);\n}\n"]},"metadata":{},"sourceType":"module"}