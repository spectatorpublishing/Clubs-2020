{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/clubprofile/changeEmail.js\";\nimport React, { createRef } from 'react';\nimport styled from 'styled-components';\nimport CustomInput from './input.js';\nexport const Header = styled.div`\n  font-family: Manrope, sans-serif;\n  font-style: normal;\n  font-weight: 1000;\n  font-size: 1.5rem;\n  line-height: 1.3em;\n  color: ${props => props.theme.colors.black};\n`;\nexport const Inputs = styled.div`\n  width: 60%;\n`;\nexport const Form = styled.form`\n  width: 100%;\n`;\nconst Description = styled.div`\n  font-family: Manrope, sans-serif;\n  font-style: normal;\n  font-weight: 600;\n  /* For PD: 18px = 1.125rem looked too big */\n  font-size: 1rem;\n  line-height: 1.4em;\n  white-space: pre-wrap;\n  color: ${props => props.theme.colors.red};\n  margin: 0.5em 0 2em;\n`;\nconst Button = styled.button`\n  border: none;\n  border-radius: 7px;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.125rem;\n  line-height: 2.4em;\n  padding: 0 1em;\n  text-align: center;\n  margin-left: 0.5em;\n  &:focus {\n    outline: none;\n  }\n`;\nexport const Operations = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n`;\nexport const Cancel = styled(Button)`\n  border: 1px solid ${props => props.theme.colors.red};\n  color: ${props => props.theme.colors.red};\n  background-color: white;\n`;\nexport const Change = styled.input`\n  border: none;\n  border-radius: 7px;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.125rem;\n  line-height: 2.4em;\n  padding: 0 1em;\n  text-align: center;\n  margin-left: 0.5em;\n  &:focus {\n    outline: none;\n  }\n  border: 1px solid ${props => props.theme.colors.red};\n  color: white;\n  background-color: ${props => props.theme.colors.red};\n`;\nconst DESCRIPTION = 'To change email of account, the new user ' + 'will receive an email with a link to approve the change. The ' + 'new user must approve this change within 30 minutes of the request ' + 'made here. For security purposes, only .edu addresses allowed.';\nconst form = createRef();\nexport default function ChangeEmail(props) {\n  function postEmailRequest(e) {\n    /* POST update account email request here */\n    let data = new FormData(form.current); // key/value pairs of the form can be obtained as follows:\n\n    console.log('Email:', data.get('Email'));\n    console.log('Confirm with Password:', data.get('Confirm with Password'));\n    /* Todo: check email validity and password, then make API call to update account */\n\n    props.setPage('confirmation');\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Change Account Email\"), /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, DESCRIPTION), /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    ref: form,\n    onSubmit: postEmailRequest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Inputs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    label: \"Email\",\n    type: \"email\",\n    to: \"email\",\n    button: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    label: \"Confirm with Password\",\n    type: \"password\",\n    to: \"password\",\n    button: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Operations, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Change, {\n    type: \"submit\",\n    value: \"Request Change\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Cancel, {\n    onClick: () => props.setPage('dashboard'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n}","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/clubprofile/changeEmail.js"],"names":["React","createRef","styled","CustomInput","Header","div","props","theme","colors","black","Inputs","Form","form","Description","red","Button","button","Operations","Cancel","Change","input","DESCRIPTION","ChangeEmail","postEmailRequest","e","data","FormData","current","console","log","get","setPage","preventDefault"],"mappings":"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","sourcesContent":["import React, { createRef } from 'react';\nimport styled from 'styled-components';\nimport CustomInput from './input.js';\n\nexport const Header = styled.div`\n  font-family: Manrope, sans-serif;\n  font-style: normal;\n  font-weight: 1000;\n  font-size: 1.5rem;\n  line-height: 1.3em;\n  color: ${(props) => props.theme.colors.black};\n`;\n\nexport const Inputs = styled.div`\n  width: 60%;\n`;\nexport const Form = styled.form`\n  width: 100%;\n`;\n\nconst Description = styled.div`\n  font-family: Manrope, sans-serif;\n  font-style: normal;\n  font-weight: 600;\n  /* For PD: 18px = 1.125rem looked too big */\n  font-size: 1rem;\n  line-height: 1.4em;\n  white-space: pre-wrap;\n  color: ${(props) => props.theme.colors.red};\n  margin: 0.5em 0 2em;\n`;\n\nconst Button = styled.button`\n  border: none;\n  border-radius: 7px;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.125rem;\n  line-height: 2.4em;\n  padding: 0 1em;\n  text-align: center;\n  margin-left: 0.5em;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Operations = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nexport const Cancel = styled(Button)`\n  border: 1px solid ${(props) => props.theme.colors.red};\n  color: ${(props) => props.theme.colors.red};\n  background-color: white;\n`;\n\nexport const Change = styled.input`\n  border: none;\n  border-radius: 7px;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.125rem;\n  line-height: 2.4em;\n  padding: 0 1em;\n  text-align: center;\n  margin-left: 0.5em;\n  &:focus {\n    outline: none;\n  }\n  border: 1px solid ${(props) => props.theme.colors.red};\n  color: white;\n  background-color: ${(props) => props.theme.colors.red};\n`;\n\nconst DESCRIPTION =\n  'To change email of account, the new user ' +\n  'will receive an email with a link to approve the change. The ' +\n  'new user must approve this change within 30 minutes of the request ' +\n  'made here. For security purposes, only .edu addresses allowed.';\n\nconst form = createRef();\n\nexport default function ChangeEmail(props) {\n  function postEmailRequest(e) {\n    /* POST update account email request here */\n    let data = new FormData(form.current);\n    // key/value pairs of the form can be obtained as follows:\n    console.log('Email:', data.get('Email'));\n    console.log('Confirm with Password:', data.get('Confirm with Password'));\n    /* Todo: check email validity and password, then make API call to update account */\n\n    props.setPage('confirmation');\n    e.preventDefault();\n  }\n\n  return (\n    <div>\n      <Header>Change Account Email</Header>\n      <Description>{DESCRIPTION}</Description>\n      <Form noValidate ref={form} onSubmit={postEmailRequest}>\n        <Inputs>\n          <CustomInput label='Email' type='email' to='email' button={false} />\n          <CustomInput\n            label='Confirm with Password'\n            type='password'\n            to='password'\n            button={false}\n          />\n        </Inputs>\n\n        <Operations>\n          <Change type='submit' value='Request Change' />\n          <Cancel onClick={() => props.setPage('dashboard')}>Cancel</Cancel>\n        </Operations>\n      </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}