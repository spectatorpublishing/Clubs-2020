{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/clubprofile/changePassword.js\";\nimport React, { useState, createRef } from 'react';\nimport styled from 'styled-components';\nimport CustomInput from './input.js';\nimport { Header as EmailHeader, Form, Inputs, Operations, Change, Cancel } from './changeEmail.js';\nimport { Warning } from './manageAccount';\nimport checkPassword from '../../test/signup/checkPassword';\nconst Header = styled(EmailHeader)`\n    margin-bottom: 2em;\n`;\nconst ERROR1 = 'Incorrect existing password!';\nconst ERROR2 = 'New passwords do not match!';\nconst ERROR3 = 'Invalid new password format!';\nconst form = createRef();\nexport default function ChangePassword(props) {\n  const [errMsg, setErrMsg] = useState('');\n\n  function postPasswordRequest(e) {\n    e.preventDefault();\n    let data = new FormData(form.current);\n    /* Todo: check email validity and password, then make API call to update account */\n\n    const keys = ['Current Password', 'New Password', 'Confirm New Password'];\n\n    if (false) {\n      // incorrect existing password\n\n      /* Todo: call API to check password */\n      setErrMsg(ERROR1);\n      return;\n    } else if (!checkPassword(data.get(keys[1]))) {\n      // invalid new password format\n      setErrMsg(ERROR3);\n      return;\n    } else if (data.get(keys[1]) !== data.get(keys[2])) {\n      // new passwords don't match\n      setErrMsg(ERROR2);\n      return;\n    }\n    /* POST update account email request here */\n\n\n    props.setPage('confirmation');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Change Account Email\"), /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    ref: form,\n    onSubmit: postPasswordRequest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Inputs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    label: \"Current Password\",\n    type: \"text\",\n    button: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    label: \"New Password\",\n    type: \"password\",\n    button: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    label: \"Confirm New Password\",\n    type: \"password\",\n    button: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Operations, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Change, {\n    type: \"submit\",\n    value: \"Save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Cancel, {\n    onClick: () => props.setPage('dashboard'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Cancel\"))), /*#__PURE__*/React.createElement(Warning, {\n    show: errMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, errMsg));\n}","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/clubprofile/changePassword.js"],"names":["React","useState","createRef","styled","CustomInput","Header","EmailHeader","Form","Inputs","Operations","Change","Cancel","Warning","checkPassword","ERROR1","ERROR2","ERROR3","form","ChangePassword","props","errMsg","setErrMsg","postPasswordRequest","e","preventDefault","data","FormData","current","keys","get","setPage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,MAAM,IAAIC,WAAnB,EAAgCC,IAAhC,EAAsCC,MAAtC,EAA8CC,UAA9C,EAA0DC,MAA1D,EAAkEC,MAAlE,QAAgF,kBAAhF;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,MAAMR,MAAM,GAAGF,MAAM,CAACG,WAAD,CAAc;AACnC;AACA,CAFA;AAGA,MAAMQ,MAAM,GAAG,8BAAf;AACA,MAAMC,MAAM,GAAG,6BAAf;AACA,MAAMC,MAAM,GAAG,8BAAf;AACA,MAAMC,IAAI,GAAGf,SAAS,EAAtB;AAEA,eAAe,SAASgB,cAAT,CAAwBC,KAAxB,EAA+B;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASqB,mBAAT,CAA6BC,CAA7B,EAAgC;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,IAAI,GAAG,IAAIC,QAAJ,CAAaT,IAAI,CAACU,OAAlB,CAAX;AACA;;AACA,UAAMC,IAAI,GAAG,CAAC,kBAAD,EAAoB,cAApB,EAAoC,sBAApC,CAAb;;AAEA,QAAI,KAAJ,EAAU;AACN;;AACA;AACAP,MAAAA,SAAS,CAACP,MAAD,CAAT;AACA;AACH,KALD,MAKM,IAAI,CAACD,aAAa,CAACY,IAAI,CAACI,GAAL,CAASD,IAAI,CAAC,CAAD,CAAb,CAAD,CAAlB,EAAuC;AACzC;AACAP,MAAAA,SAAS,CAACL,MAAD,CAAT;AACA;AACH,KAJK,MAIA,IAAIS,IAAI,CAACI,GAAL,CAASD,IAAI,CAAC,CAAD,CAAb,MAAsBH,IAAI,CAACI,GAAL,CAASD,IAAI,CAAC,CAAD,CAAb,CAA1B,EAA6C;AAC/C;AACAP,MAAAA,SAAS,CAACN,MAAD,CAAT;AACA;AACH;AAED;;;AACAI,IAAAA,KAAK,CAACW,OAAN,CAAc,cAAd;AACH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,GAAG,EAAEb,IAAtB;AAA4B,IAAA,QAAQ,EAAEK,mBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,KAAK,EAAC,kBADV;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,MAAM,EAAE,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,WAAD;AACI,IAAA,KAAK,EAAC,cADV;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,MAAM,EAAE,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAWI,oBAAC,WAAD;AACI,IAAA,KAAK,EAAC,sBADV;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,MAAM,EAAE,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ,eAmBI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAIH,KAAK,CAACW,OAAN,CAAc,WAAd,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAnBJ,CAFJ,eA0BI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEV,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,MAAxB,CA1BJ,CADJ;AA8BH","sourcesContent":["import React, { useState, createRef } from 'react';\nimport styled from 'styled-components';\nimport CustomInput from './input.js';\nimport { Header as EmailHeader, Form, Inputs, Operations, Change, Cancel } from './changeEmail.js';\nimport { Warning } from './manageAccount';\nimport checkPassword from '../../test/signup/checkPassword';\n\nconst Header = styled(EmailHeader)`\n    margin-bottom: 2em;\n`\nconst ERROR1 = 'Incorrect existing password!';\nconst ERROR2 = 'New passwords do not match!';\nconst ERROR3 = 'Invalid new password format!'\nconst form = createRef();\n\nexport default function ChangePassword(props) {\n    const [errMsg, setErrMsg] = useState('');\n\n    function postPasswordRequest(e) {\n        e.preventDefault();\n        let data = new FormData(form.current);\n        /* Todo: check email validity and password, then make API call to update account */\n        const keys = ['Current Password','New Password', 'Confirm New Password'];\n\n        if (false){\n            // incorrect existing password\n            /* Todo: call API to check password */\n            setErrMsg(ERROR1);\n            return;\n        }else if (!checkPassword(data.get(keys[1]))) {\n            // invalid new password format\n            setErrMsg(ERROR3);\n            return;\n        }else if (data.get(keys[1]) !== data.get(keys[2])) {\n            // new passwords don't match\n            setErrMsg(ERROR2);\n            return;\n        }\n\n        /* POST update account email request here */\n        props.setPage('confirmation');\n    }\n\n    return (\n        <div>\n            <Header>Change Account Email</Header>\n            <Form noValidate ref={form} onSubmit={postPasswordRequest}>\n                <Inputs>\n                    <CustomInput\n                        label='Current Password'\n                        type='text'\n                        button={false}\n                    />\n                    <CustomInput\n                        label='New Password'\n                        type='password'\n                        button={false}\n                    />\n                    <CustomInput\n                        label='Confirm New Password'\n                        type='password'\n                        button={false}\n                    />\n                </Inputs>\n                \n                <Operations>\n                    <Change type='submit' value='Save'/>\n                    <Cancel onClick={()=>props.setPage('dashboard')}>Cancel</Cancel>\n                </Operations>\n            </Form>\n            <Warning show={errMsg}>{errMsg}</Warning>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}