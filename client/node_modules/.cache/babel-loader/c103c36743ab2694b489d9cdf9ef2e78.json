{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/grayTag/index.js\";\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useFocused } from '../customHooks';\nimport { GrayTagContext } from '../contexts/index'; // Must be enclosed by a GrayTagContainer component\n\nconst GrayTag = ({\n  text,\n  identifier\n}) => {\n  const grayTag = useRef(null);\n  const {\n    handleClick,\n    selectedTag\n  } = useContext(GrayTagContext);\n  const grayTagFocused = useFocused(grayTag);\n\n  const onKeypress = e => {\n    if (e.keyCode === 13) {\n      grayTag.current.click();\n    }\n  };\n\n  useEffect(() => {\n    if (grayTagFocused) {\n      document.addEventListener('keypress', onKeypress);\n    }\n\n    return () => {\n      document.removeEventListener('keypress', onKeypress);\n    };\n  }, [grayTagFocused]);\n  const tagVariants = {\n    active: {\n      backgroundColor: 'rgba(226, 223, 223, 0.7)'\n    },\n    inactive: {\n      backgroundColor: 'rgba(226, 223, 223, 0)'\n    }\n  };\n  return /*#__PURE__*/React.createElement(Tag, {\n    ref: grayTag,\n    onClick: () => {\n      handleClick(identifier);\n    },\n    variants: tagVariants,\n    clicked: selectedTag === identifier,\n    initial: \"inactive\",\n    animate: selectedTag === identifier ? 'active' : 'inactive',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, text ? text : 'no text entered');\n};\n\nconst Tag = styled(motion.button)`\n  display: inline-block;\n  padding: 0.4rem 1rem;\n  font-family: 'Manrope', 'Roboto', 'Arial', 'Helvetica';\n  font-size: 0.9rem;\n  border-radius: 1rem;\n  border: ${props => props.clicked ? '.125rem' : '0.0625rem'}\n    ${props => props.theme.colors.gray} solid;\n  outline-color: ${props => props.theme.colors.blue};\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  margin: ${props => props.clicked ? '-0.0625rem' : '0'};\n  -ms-user-select: none;\n  user-select: none;\n  color: ${props => props.theme.colors.checkboxGray};\n  cursor: pointer;\n  min-width: 6rem;\n  @media only screen and (max-width: 600px) {\n    font-size: 0.85rem;\n  }\n`;\nexport default GrayTag;","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/grayTag/index.js"],"names":["React","useRef","useState","useEffect","useContext","styled","motion","useFocused","GrayTagContext","GrayTag","text","identifier","grayTag","handleClick","selectedTag","grayTagFocused","onKeypress","e","keyCode","current","click","document","addEventListener","removeEventListener","tagVariants","active","backgroundColor","inactive","Tag","button","props","clicked","theme","colors","gray","blue","checkboxGray"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,cAAT,QAA+B,mBAA/B,C,CAGA;;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AACxC,QAAMC,OAAO,GAAGX,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM;AAAEY,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA+BV,UAAU,CAACI,cAAD,CAA/C;AACA,QAAMO,cAAc,GAAGR,UAAU,CAACK,OAAD,CAAjC;;AACA,QAAMI,UAAU,GAAIC,CAAD,IAAO;AACxB,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpBN,MAAAA,OAAO,CAACO,OAAR,CAAgBC,KAAhB;AACD;AACF,GAJD;;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,cAAJ,EAAoB;AAClBM,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsCN,UAAtC;AACD;;AACD,WAAO,MAAM;AACXK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,UAA7B,EAAyCP,UAAzC;AACD,KAFD;AAGD,GAPQ,EAON,CAACD,cAAD,CAPM,CAAT;AASA,QAAMS,WAAW,GAAG;AAClBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,eAAe,EAAE;AADX,KADU;AAIlBC,IAAAA,QAAQ,EAAE;AACRD,MAAAA,eAAe,EAAE;AADT;AAJQ,GAApB;AASA,sBACE,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEd,OADP;AAEE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,WAAW,CAACF,UAAD,CAAX;AACD,KAJH;AAKE,IAAA,QAAQ,EAAEa,WALZ;AAME,IAAA,OAAO,EAAEV,WAAW,KAAKH,UAN3B;AAOE,IAAA,OAAO,EAAC,UAPV;AAQE,IAAA,OAAO,EAAEG,WAAW,KAAKH,UAAhB,GAA6B,QAA7B,GAAwC,UARnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGD,IAAI,GAAGA,IAAH,GAAU,iBAVjB,CADF;AAcD,CAzCD;;AA2CA,MAAMkB,GAAG,GAAGvB,MAAM,CAACC,MAAM,CAACuB,MAAR,CAAgB;AAClC;AACA;AACA;AACA;AACA;AACA,YAAaC,KAAD,IAAYA,KAAK,CAACC,OAAN,GAAgB,SAAhB,GAA4B,WAAa;AACjE,MAAOD,KAAD,IAAWA,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,IAAK;AACzC,mBAAoBJ,KAAD,IAAWA,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBE,IAAK;AACtD;AACA;AACA,YAAaL,KAAD,IAAYA,KAAK,CAACC,OAAN,GAAgB,YAAhB,GAA+B,GAAK;AAC5D;AACA;AACA,WAAYD,KAAD,IAAWA,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBG,YAAa;AACtD;AACA;AACA;AACA;AACA;AACA,CApBA;AAsBA,eAAe3B,OAAf","sourcesContent":["import React, { useRef, useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useFocused } from '../customHooks';\nimport { GrayTagContext } from '../contexts/index';\n\n\n// Must be enclosed by a GrayTagContainer component\nconst GrayTag = ({ text, identifier }) => {\n  const grayTag = useRef(null);\n  const { handleClick, selectedTag } = useContext(GrayTagContext);\n  const grayTagFocused = useFocused(grayTag);\n  const onKeypress = (e) => {\n    if (e.keyCode === 13) {\n      grayTag.current.click();\n    }\n  };\n  useEffect(() => {\n    if (grayTagFocused) {\n      document.addEventListener('keypress', onKeypress);\n    }\n    return () => {\n      document.removeEventListener('keypress', onKeypress);\n    };\n  }, [grayTagFocused]);\n\n  const tagVariants = {\n    active: {\n      backgroundColor: 'rgba(226, 223, 223, 0.7)',\n    },\n    inactive: {\n      backgroundColor: 'rgba(226, 223, 223, 0)',\n    },\n  };\n\n  return (\n    <Tag\n      ref={grayTag}\n      onClick={() => {\n        handleClick(identifier);\n      }}\n      variants={tagVariants}\n      clicked={selectedTag === identifier}\n      initial='inactive'\n      animate={selectedTag === identifier ? 'active' : 'inactive'}\n    >\n      {text ? text : 'no text entered'}\n    </Tag>\n  );\n};\n\nconst Tag = styled(motion.button)`\n  display: inline-block;\n  padding: 0.4rem 1rem;\n  font-family: 'Manrope', 'Roboto', 'Arial', 'Helvetica';\n  font-size: 0.9rem;\n  border-radius: 1rem;\n  border: ${(props) => (props.clicked ? '.125rem' : '0.0625rem')}\n    ${(props) => props.theme.colors.gray} solid;\n  outline-color: ${(props) => props.theme.colors.blue};\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  margin: ${(props) => (props.clicked ? '-0.0625rem' : '0')};\n  -ms-user-select: none;\n  user-select: none;\n  color: ${(props) => props.theme.colors.checkboxGray};\n  cursor: pointer;\n  min-width: 6rem;\n  @media only screen and (max-width: 600px) {\n    font-size: 0.85rem;\n  }\n`;\n\nexport default GrayTag;\n"]},"metadata":{},"sourceType":"module"}