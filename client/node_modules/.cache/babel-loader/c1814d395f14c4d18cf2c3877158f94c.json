{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/grayTag/container.js\";\nimport React, { useState } from 'react';\nimport { GrayTagContext } from '../contexts/index';\n\nconst GrayTagContainer = ({\n  children,\n  objId,\n  data,\n  setData\n}) => {\n  const [selectedTag, setSelectedTag] = useState('');\n\n  const handleClick = identifier => {\n    if (selectedTag === identifier) {\n      let tempData = { ...data\n      };\n\n      if (objId in tempData) {\n        tempData[objId] = '';\n      } else {\n        console.error('objId not in the obj');\n      }\n\n      setSelectedTag('');\n    } else {\n      setSelectedTag(identifier);\n\n      if (objId in tempData) {\n        tempData[objId] = identifier;\n      } else {\n        console.error('objId not in the obj');\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(GrayTagContext.Provider, {\n    value: {\n      handleClick,\n      selectedTag\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default GrayTagContainer;","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/grayTag/container.js"],"names":["React","useState","GrayTagContext","GrayTagContainer","children","objId","data","setData","selectedTag","setSelectedTag","handleClick","identifier","tempData","console","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,IAAnB;AAAyBC,EAAAA;AAAzB,CAAD,KAAwC;AAC/D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMS,WAAW,GAAIC,UAAD,IAAgB;AAClC,QAAIH,WAAW,KAAKG,UAApB,EAAgC;AAC9B,UAAIC,QAAQ,GAAG,EAAE,GAAGN;AAAL,OAAf;;AACA,UAAID,KAAK,IAAIO,QAAb,EAAuB;AACrBA,QAAAA,QAAQ,CAACP,KAAD,CAAR,GAAkB,EAAlB;AACD,OAFD,MAEO;AACLQ,QAAAA,OAAO,CAACC,KAAR,CAAc,sBAAd;AACD;;AACDL,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KARD,MAQO;AACLA,MAAAA,cAAc,CAACE,UAAD,CAAd;;AACA,UAAIN,KAAK,IAAIO,QAAb,EAAuB;AACrBA,QAAAA,QAAQ,CAACP,KAAD,CAAR,GAAkBM,UAAlB;AACD,OAFD,MAEO;AACLE,QAAAA,OAAO,CAACC,KAAR,CAAc,sBAAd;AACD;AACF;AACF,GAjBD;;AAkBA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,WAAF;AAAeF,MAAAA;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF;AAKD,CA1BD;;AA4BA,eAAeD,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { GrayTagContext } from '../contexts/index';\n\nconst GrayTagContainer = ({ children, objId, data, setData }) => {\n  const [selectedTag, setSelectedTag] = useState('');\n\n  const handleClick = (identifier) => {\n    if (selectedTag === identifier) {\n      let tempData = { ...data };\n      if (objId in tempData) {\n        tempData[objId] = '';\n      } else {\n        console.error('objId not in the obj');\n      }\n      setSelectedTag('');\n    } else {\n      setSelectedTag(identifier);\n      if (objId in tempData) {\n        tempData[objId] = identifier;\n      } else {\n        console.error('objId not in the obj');\n      }\n    }\n  };\n  return (\n    <GrayTagContext.Provider value={{ handleClick, selectedTag }}>\n      {children}\n    </GrayTagContext.Provider>\n  );\n};\n\nexport default GrayTagContainer;\n"]},"metadata":{},"sourceType":"module"}