{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/checkbox/index.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useFocused, useViewport } from '../customHooks/index'; // orderNum is for when you want border radius on sides of mobile version\n\nconst Checkbox = ({\n  theme,\n  labelText,\n  orderNum\n}) => {\n  const [clicked, setClicked] = useState(false);\n  const checkbox = useRef(null);\n  const checkboxFocused = useFocused(checkbox);\n  const {\n    width\n  } = useViewport();\n  const breakpoint = 600;\n\n  const onKeypress = e => {\n    if (e.keyCode === 13) {\n      checkbox.current.click();\n    }\n  };\n\n  useEffect(() => {\n    if (checkboxFocused) {\n      document.addEventListener('keypress', onKeypress);\n    }\n\n    return () => {\n      document.removeEventListener('keypress', onKeypress);\n    };\n  }, [checkboxFocused]);\n  return /*#__PURE__*/React.createElement(LabelContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxContainer, {\n    tabIndex: 0,\n    ref: checkbox,\n    onClick: () => {\n      setClicked(!clicked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledCheckbox, {\n    clicked: clicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, width <= breakpoint ? /*#__PURE__*/React.createElement(MobileLabel, {\n    orderNum: orderNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, labelText) : /*#__PURE__*/React.createElement(React.Fragment, null), clicked && width > breakpoint ? /*#__PURE__*/React.createElement(Check, {\n    width: \"14\",\n    height: \"11\",\n    viewBox: \"0 0 14 11\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/Check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 1.5L4.75 9.75L1 6\",\n    stroke: theme.colors.white,\n    strokeWidth: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null))), width <= breakpoint ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(CheckboxLabel, {\n    onClick: () => {\n      setClicked(!clicked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, labelText));\n};\n\nconst LabelContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  outline-color: ${props => props.theme.colors.blue};\n`;\nconst MobileLabel = styled.span`\n  font-family: 'Roboto', 'Helvetica', 'Arial';\n  font-size: 0.8125rem;\n`;\nconst StyledCheckbox = styled(motion.div)`\n  width: 1.25rem;\n  height: 1.25rem;\n  border-radius: 0.3125rem;\n  background-color: ${props => props.clicked ? props.theme.colors.checkboxGray : props.theme.colors.fullWhite};\n  border: 0.03125rem solid\n    ${props => props.clicked ? props.theme.colors.checkboxGray : props.theme.colors.gray};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  @media screen and (max-width: 600px) {\n    width: 6.6rem;\n    height: 2rem;\n    border-radius: 0;\n    ${props => props.orderNum === 0 && css`\n        border-top-left-radius: 2rem;\n        border-bottom-left-radius: 2rem;\n      `}\n    ${props => props.orderNum === 2 && css`\n        border-top-right-radius: 2rem;\n        border-bottom-right-radius: 2rem;\n      `}\n  }\n`;\nconst CheckboxLabel = styled.label`\n  color: ${props => props.theme.colors.checkboxGray};\n  font-size: 1.125rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  margin-left: 0.65rem;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  height: auto;\n  width: auto;\n  -ms-user-select: none;\n  cursor: pointer;\n`;\nconst Check = styled.svg`\n  width: 14px;\n  height: 11px;\n  fill: none;\n`;\nexport default withTheme(Checkbox);","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/checkbox/index.js"],"names":["React","useState","useRef","useEffect","styled","withTheme","motion","useFocused","useViewport","Checkbox","theme","labelText","orderNum","clicked","setClicked","checkbox","checkboxFocused","width","breakpoint","onKeypress","e","keyCode","current","click","document","addEventListener","removeEventListener","colors","white","LabelContainer","div","CheckboxContainer","props","blue","MobileLabel","span","StyledCheckbox","checkboxGray","fullWhite","gray","css","CheckboxLabel","label","Check","svg"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useFocused, useViewport } from '../customHooks/index';\n\n// orderNum is for when you want border radius on sides of mobile version\n\nconst Checkbox = ({ theme, labelText, orderNum }) => {\n  const [clicked, setClicked] = useState(false);\n  const checkbox = useRef(null);\n  const checkboxFocused = useFocused(checkbox);\n  const { width } = useViewport();\n  const breakpoint = 600;\n\n  const onKeypress = (e) => {\n    if (e.keyCode === 13) {\n      checkbox.current.click();\n    }\n  };\n\n  useEffect(() => {\n    if (checkboxFocused) {\n      document.addEventListener('keypress', onKeypress);\n    }\n    return () => {\n      document.removeEventListener('keypress', onKeypress);\n    };\n  }, [checkboxFocused]);\n\n  return (\n    <LabelContainer>\n      <CheckboxContainer\n        tabIndex={0}\n        ref={checkbox}\n        onClick={() => {\n          setClicked(!clicked);\n        }}\n      >\n        <StyledCheckbox clicked={clicked}>\n          {width <= breakpoint ? (\n            <MobileLabel orderNum={orderNum}>{labelText}</MobileLabel>\n          ) : (\n            <></>\n          )}\n          {clicked && width > breakpoint ? (\n            <Check\n              width='14'\n              height='11'\n              viewBox='0 0 14 11'\n              fill='none'\n              xmlns='http://www.w3.org/2000/Check'\n            >\n              <path\n                d='M13 1.5L4.75 9.75L1 6'\n                stroke={theme.colors.white}\n                strokeWidth={2}\n              />\n            </Check>\n          ) : (\n            <></>\n          )}\n        </StyledCheckbox>\n      </CheckboxContainer>\n      {width <= breakpoint ? (\n        <></>\n      ) : (\n        <CheckboxLabel\n          onClick={() => {\n            setClicked(!clicked);\n          }}\n        >\n          {labelText}\n        </CheckboxLabel>\n      )}\n    </LabelContainer>\n  );\n};\n\nconst LabelContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  outline-color: ${(props) => props.theme.colors.blue};\n`;\n\nconst MobileLabel = styled.span`\n  font-family: 'Roboto', 'Helvetica', 'Arial';\n  font-size: 0.8125rem;\n`;\n\nconst StyledCheckbox = styled(motion.div)`\n  width: 1.25rem;\n  height: 1.25rem;\n  border-radius: 0.3125rem;\n  background-color: ${(props) =>\n    props.clicked\n      ? props.theme.colors.checkboxGray\n      : props.theme.colors.fullWhite};\n  border: 0.03125rem solid\n    ${(props) =>\n      props.clicked\n        ? props.theme.colors.checkboxGray\n        : props.theme.colors.gray};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  @media screen and (max-width: 600px) {\n    width: 6.6rem;\n    height: 2rem;\n    border-radius: 0;\n    ${(props) =>\n      props.orderNum === 0 &&\n      css`\n        border-top-left-radius: 2rem;\n        border-bottom-left-radius: 2rem;\n      `}\n    ${(props) =>\n      props.orderNum === 2 &&\n      css`\n        border-top-right-radius: 2rem;\n        border-bottom-right-radius: 2rem;\n      `}\n  }\n`;\n\nconst CheckboxLabel = styled.label`\n  color: ${(props) => props.theme.colors.checkboxGray};\n  font-size: 1.125rem;\n  font-family: 'Roboto', 'Arial', 'Helvetica';\n  margin-left: 0.65rem;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  height: auto;\n  width: auto;\n  -ms-user-select: none;\n  cursor: pointer;\n`;\n\nconst Check = styled.svg`\n  width: 14px;\n  height: 11px;\n  fill: none;\n`;\n\nexport default withTheme(Checkbox);\n"]},"metadata":{},"sourceType":"module"}