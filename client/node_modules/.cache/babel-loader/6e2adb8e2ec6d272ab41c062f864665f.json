{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/textInput/index.js\";\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { getErrorMessage, getLabel, limitSize } from './helper';\n\nconst TextInput = ({\n  height,\n  width,\n  multiline,\n  labelHeader,\n  labelDesc,\n  compulsory,\n  placeholder,\n  characterMax,\n  identifier,\n  labelWidth,\n  reference\n}) => {\n  const [focused, setFocused] = useState(false);\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\n  const [excessCharacters, setExcessCharacters] = useState(0);\n  const inputVariants = {\n    init: {\n      boxShadow: 'rgba(0, 0, 0, 0.09) 2px 10px 30px',\n      transition: {\n        duration: 0.3\n      }\n    },\n    anim: {\n      boxShadow: '2px 10px 30px rgba(120, 192, 245, 0.5)',\n      transition: {\n        duration: 0.3\n      }\n    }\n  };\n\n  const whenChange = e => {\n    limitSize(e, characterMax, setShowErrorMessage, setExcessCharacters);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, multiline ? /*#__PURE__*/React.createElement(TextContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, getLabel(compulsory, labelHeader, labelDesc, identifier, labelWidth), /*#__PURE__*/React.createElement(FlexCol, {\n    width: width,\n    multiline: multiline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledTextArea, {\n    defaultValue: \"bob\",\n    id: identifier,\n    ref: reference,\n    name: identifier,\n    height: height,\n    variants: inputVariants,\n    focused: focused,\n    placeholder: placeholder,\n    onFocus: () => {\n      setFocused(true);\n    },\n    onBlur: () => {\n      setFocused(false);\n    },\n    onChange: whenChange,\n    initial: \"init\",\n    animate: focused ? 'anim' : 'init',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), getErrorMessage(showErrorMessage, excessCharacters))) : /*#__PURE__*/React.createElement(TextContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, getLabel(compulsory, labelHeader, labelDesc, identifier, labelWidth), /*#__PURE__*/React.createElement(FlexCol, {\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledInput, {\n    id: identifier,\n    ref: reference,\n    name: identifier,\n    height: height,\n    variants: inputVariants,\n    focused: focused,\n    placeholder: placeholder,\n    onFocus: () => {\n      setFocused(true);\n    },\n    onBlur: () => {\n      setFocused(false);\n    },\n    onChange: whenChange,\n    initial: \"init\",\n    animate: focused ? 'anim' : 'init',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), getErrorMessage(showErrorMessage, excessCharacters))));\n};\n\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 1rem 0 0 0.3rem;\n  @media only screen and (max-width: 801px) {\n    flex-direction: column !important;\n  }\n`;\nconst FlexCol = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  width: ${props => props.width ? props.width : 'auto'};\n\n  @media only screen and (max-width: 801px) {\n    ${props => props.multiline && css`\n        height: calc(${props => props.height} + 5rem) !important;\n      `}\n  }\n`;\nconst InputStyles = css`\n  background: ${props => props.theme.colors.fullWhite};\n  border: none;\n  border-radius: 7px;\n  padding: 0.5rem;\n  height: ${props => props.height ? props.height : 'auto'};\n  width: 100%;\n  font-size: 1.125rem;\n  color: ${props => props.theme.colors.checkboxGray};\n  font-family: 'Manrope', 'Roboto', 'Helvetica', 'Arial';\n  resize: none;\n  outline-color: ${props => props.theme.colors.blue};\n  overflow-y: auto;\n  cursor: text;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  box-shadow: rgba(0, 0, 0, 0.05) 2px 10px 30px;\n`;\nconst StyledTextArea = styled(motion.textarea)`\n  ${InputStyles}\n`;\nconst StyledInput = styled(motion.input)`\n  ${InputStyles}\n`;\nexport default TextInput;","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/textInput/index.js"],"names":["React","useState","styled","css","motion","getErrorMessage","getLabel","limitSize","TextInput","height","width","multiline","labelHeader","labelDesc","compulsory","placeholder","characterMax","identifier","labelWidth","reference","focused","setFocused","showErrorMessage","setShowErrorMessage","excessCharacters","setExcessCharacters","inputVariants","init","boxShadow","transition","duration","anim","whenChange","e","TextContainer","div","FlexCol","props","InputStyles","theme","colors","fullWhite","checkboxGray","blue","StyledTextArea","textarea","StyledInput","input"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { getErrorMessage, getLabel, limitSize } from './helper';\n\nconst TextInput = ({\n  height,\n  width,\n  multiline,\n  labelHeader,\n  labelDesc,\n  compulsory,\n  placeholder,\n  characterMax,\n  identifier,\n  labelWidth,\n  reference,\n}) => {\n  const [focused, setFocused] = useState(false);\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\n  const [excessCharacters, setExcessCharacters] = useState(0);\n  const inputVariants = {\n    init: {\n      boxShadow: 'rgba(0, 0, 0, 0.09) 2px 10px 30px',\n      transition: { duration: 0.3 },\n    },\n    anim: {\n      boxShadow: '2px 10px 30px rgba(120, 192, 245, 0.5)',\n      transition: { duration: 0.3 },\n    },\n  };\n  const whenChange = (e) => {\n    limitSize(e, characterMax, setShowErrorMessage, setExcessCharacters);\n  };\n\n  return (\n    <>\n      {multiline ? (\n        <TextContainer>\n          {getLabel(compulsory, labelHeader, labelDesc, identifier, labelWidth)}\n          <FlexCol width={width} multiline={multiline}>\n            <StyledTextArea\n              defaultValue='bob'\n              id={identifier}\n              ref={reference}\n              name={identifier}\n              height={height}\n              variants={inputVariants}\n              focused={focused}\n              placeholder={placeholder}\n              onFocus={() => {\n                setFocused(true);\n              }}\n              onBlur={() => {\n                setFocused(false);\n              }}\n              onChange={whenChange}\n              initial='init'\n              animate={focused ? 'anim' : 'init'}\n            />\n            {getErrorMessage(showErrorMessage, excessCharacters)}\n          </FlexCol>\n        </TextContainer>\n      ) : (\n        <TextContainer>\n          {getLabel(compulsory, labelHeader, labelDesc, identifier, labelWidth)}\n          <FlexCol width={width}>\n            <StyledInput\n              id={identifier}\n              ref={reference}\n              name={identifier}\n              height={height}\n              variants={inputVariants}\n              focused={focused}\n              placeholder={placeholder}\n              onFocus={() => {\n                setFocused(true);\n              }}\n              onBlur={() => {\n                setFocused(false);\n              }}\n              onChange={whenChange}\n              initial='init'\n              animate={focused ? 'anim' : 'init'}\n            />\n            {getErrorMessage(showErrorMessage, excessCharacters)}\n          </FlexCol>\n        </TextContainer>\n      )}\n    </>\n  );\n};\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 1rem 0 0 0.3rem;\n  @media only screen and (max-width: 801px) {\n    flex-direction: column !important;\n  }\n`;\n\nconst FlexCol = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  width: ${(props) => (props.width ? props.width : 'auto')};\n\n  @media only screen and (max-width: 801px) {\n    ${(props) =>\n      props.multiline &&\n      css`\n        height: calc(${(props) => props.height} + 5rem) !important;\n      `}\n  }\n`;\n\nconst InputStyles = css`\n  background: ${(props) => props.theme.colors.fullWhite};\n  border: none;\n  border-radius: 7px;\n  padding: 0.5rem;\n  height: ${(props) => (props.height ? props.height : 'auto')};\n  width: 100%;\n  font-size: 1.125rem;\n  color: ${(props) => props.theme.colors.checkboxGray};\n  font-family: 'Manrope', 'Roboto', 'Helvetica', 'Arial';\n  resize: none;\n  outline-color: ${(props) => props.theme.colors.blue};\n  overflow-y: auto;\n  cursor: text;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  box-shadow: rgba(0, 0, 0, 0.05) 2px 10px 30px;\n`;\n\nconst StyledTextArea = styled(motion.textarea)`\n  ${InputStyles}\n`;\n\nconst StyledInput = styled(motion.input)`\n  ${InputStyles}\n`;\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}