{"ast":null,"code":"var _jsxFileName = \"/Users/maa48/github-projects/Clubs-2020/client/src/components/clubprofile/input.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst Container = styled.div`\n    font-family: Roboto, sans-serif;\n    font-style: normal;\n`;\nconst Label = styled.label`\n    display: block;\n    font-size: 1.125rem;\n    line-height: 1.2em;\n    font-weight: 600;\n    color: ${props => props.theme.colors.black};\n`;\nconst Input = styled.input`\n    /* overide default settings */\n    border: none;\n    /* custom settings */\n    width: 80%;\n    border-bottom: 0.5px solid ${props => props.theme.colors.gray};\n    font-weight: 500;\n    font-size: 1.125rem;\n    line-height: 2em;\n    color: #696969;\n    &:focus {\n        outline: none;\n    }\n    &:-webkit-autofill {\n        -webkit-text-fill-color: #696969;\n        /* Todo: disable default autofill background */\n    }\n`;\nconst Change = styled.button`\n    display: ${props => props.show ? 'block' : 'none'};\n    border: none;\n    width: 20%;\n    font-size: 0.875rem;\n    text-align: center;\n    color: #696969;\n    background-color: inherit;\n\n    &:focus {\n        outline: none;\n    }\n`;\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-content: center;\n    margin-bottom: 2em;\n`;\nexport default function CustomInput(props) {\n  const [userInput, setUserInput] = useState(props.initVal || '');\n\n  function updateUserInput(e) {\n    e.preventDefault();\n    setUserInput(e.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, props.label), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: props.label,\n    type: props.type,\n    value: userInput,\n    onChange: updateUserInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Change, {\n    show: props.button,\n    onClick: () => props.callback(props.to),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Change\")));\n}","map":{"version":3,"sources":["/Users/maa48/github-projects/Clubs-2020/client/src/components/clubprofile/input.js"],"names":["React","useState","styled","Container","div","Label","label","props","theme","colors","black","Input","input","gray","Change","button","show","Row","CustomInput","userInput","setUserInput","initVal","updateUserInput","e","preventDefault","target","value","type","callback","to"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA;AACA,CAHA;AAKA,MAAMC,KAAK,GAAGH,MAAM,CAACI,KAAM;AAC3B;AACA;AACA;AACA;AACA,aAAaC,KAAK,IAAEA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,KAAM;AAC7C,CANA;AAQA,MAAMC,KAAK,GAAGT,MAAM,CAACU,KAAM;AAC3B;AACA;AACA;AACA;AACA,iCAAiCL,KAAK,IAAEA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBI,IAAK;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,MAAMC,MAAM,GAAGZ,MAAM,CAACa,MAAO;AAC7B,eAAeR,KAAK,IAAIA,KAAK,CAACS,IAAN,GAAa,OAAb,GAAuB,MAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,MAAMC,GAAG,GAAGf,MAAM,CAACE,GAAI;AACvB;AACA;AACA;AACA;AACA,CALA;AAOA,eAAe,SAASc,WAAT,CAAqBX,KAArB,EAA4B;AACvC,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAACM,KAAK,CAACc,OAAN,IAAiB,EAAlB,CAA1C;;AAEA,WAASC,eAAT,CAAyBC,CAAzB,EAA4B;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,YAAY,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAZ;AACH;;AAED,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQnB,KAAK,CAACD,KAAd,CADJ,eAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAEC,KAAK,CAACD,KADhB;AAEI,IAAA,IAAI,EAAEC,KAAK,CAACoB,IAFhB;AAGI,IAAA,KAAK,EAAER,SAHX;AAII,IAAA,QAAQ,EAAEG,eAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEf,KAAK,CAACQ,MAApB;AAA4B,IAAA,OAAO,EAAE,MAAIR,KAAK,CAACqB,QAAN,CAAerB,KAAK,CAACsB,EAArB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CAFJ,CADJ;AAcH","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    font-family: Roboto, sans-serif;\n    font-style: normal;\n`\n\nconst Label = styled.label`\n    display: block;\n    font-size: 1.125rem;\n    line-height: 1.2em;\n    font-weight: 600;\n    color: ${props=>props.theme.colors.black};\n`\n\nconst Input = styled.input`\n    /* overide default settings */\n    border: none;\n    /* custom settings */\n    width: 80%;\n    border-bottom: 0.5px solid ${props=>props.theme.colors.gray};\n    font-weight: 500;\n    font-size: 1.125rem;\n    line-height: 2em;\n    color: #696969;\n    &:focus {\n        outline: none;\n    }\n    &:-webkit-autofill {\n        -webkit-text-fill-color: #696969;\n        /* Todo: disable default autofill background */\n    }\n`\n\nconst Change = styled.button`\n    display: ${props => props.show ? 'block' : 'none'};\n    border: none;\n    width: 20%;\n    font-size: 0.875rem;\n    text-align: center;\n    color: #696969;\n    background-color: inherit;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-content: center;\n    margin-bottom: 2em;\n`\n\nexport default function CustomInput(props) {\n    const [userInput, setUserInput] = useState(props.initVal || '');\n\n    function updateUserInput(e) {\n        e.preventDefault();\n        setUserInput(e.target.value);\n    }\n\n    return (\n        <Container>\n            <Label>{props.label}</Label>\n            <Row>\n                <Input\n                    name={props.label}\n                    type={props.type}\n                    value={userInput}\n                    onChange={updateUserInput}\n                />\n                <Change show={props.button} onClick={()=>props.callback(props.to)}>Change</Change>\n            </Row>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}